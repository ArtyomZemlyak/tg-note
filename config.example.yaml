# ═══════════════════════════════════════════════════════════════════════════════
# Example Application Configuration
# ═══════════════════════════════════════════════════════════════════════════════
# IMPORTANT: Copy this file to config.yaml and adjust according to your needs
#
# This file contains main application settings that do not include sensitive data.
#
# All sensitive data (tokens, API keys, passwords) should be stored in .env file
# or passed through environment variables to ensure security.
# ═══════════════════════════════════════════════════════════════════════════════


# ───────────────────────────────────────────────────────────────────────────────
# Knowledge Base Settings
# ───────────────────────────────────────────────────────────────────────────────
# The knowledge base is used to store and manage documents processed by the bot.
# Git integration is supported for versioning.

# KB_PATH: Path to the knowledge base directory
# - Can be relative (./knowledge_base) or absolute (/path/to/kb)
# - Directory will be created automatically if it doesn't exist
KB_PATH: ./knowledge_base

# KB_GIT_ENABLED: Enable Git integration
# - true: All changes in the knowledge base will be committed to Git repository
# - false: Knowledge base works as regular file system without versioning
KB_GIT_ENABLED: true

# KB_GIT_AUTO_PUSH: Automatically push changes to remote repository
# - true: After each commit, changes are automatically pushed to remote server
# - false: Commits remain local, manual synchronization required
# - IMPORTANT: Only works if KB_GIT_ENABLED=true
KB_GIT_AUTO_PUSH: true

# KB_GIT_REMOTE: Name of the remote Git repository
# - Default "origin" - standard name for the main remote repository
# - Can be changed to another name if using non-standard setup
KB_GIT_REMOTE: origin

# KB_GIT_BRANCH: Git branch for working with knowledge base
# - All commits will be created and pushed to this branch
# - Make sure the branch exists or will be created
KB_GIT_BRANCH: main


# ───────────────────────────────────────────────────────────────────────────────
# Processing Settings
# ───────────────────────────────────────────────────────────────────────────────
# Parameters controlling the logic of processing incoming messages and their grouping.

# MESSAGE_GROUP_TIMEOUT: Message grouping timeout (in seconds)
# - Wait time before processing a group of messages
# - If user sends multiple messages in a row, bot will wait specified number of
#   seconds to group them and process together
# - Recommended value: 30-60 seconds
# - Minimum: 10 seconds, maximum: 300 seconds (5 minutes)
MESSAGE_GROUP_TIMEOUT: 30  # seconds

# PROCESSED_LOG_PATH: Path to the processed messages log file
# - JSON file for tracking history of processed messages
# - Used to prevent duplicate processing and recovery after failures
# - File is created automatically, directory must exist
PROCESSED_LOG_PATH: ./data/processed.json


# ───────────────────────────────────────────────────────────────────────────────
# Logging Settings
# ───────────────────────────────────────────────────────────────────────────────
# Logging system configuration for debugging and monitoring bot operations.

# LOG_LEVEL: Log detail level
# Available values (from least detailed to most detailed):
#
# - CRITICAL: Only critical errors that lead to application shutdown
#
# - ERROR:   Errors that break function operations but don't stop the application
#
# - WARNING: Warnings about potential issues (recommended for production)
#
# - INFO:    General information about application flow (default)
#
# - DEBUG:   Detailed information for debugging, including variables and traces
#            WARNING: May contain sensitive data, do not use in production
#
# Recommendations:
# - Development/debugging: DEBUG or INFO
# - Production: WARNING or ERROR
LOG_LEVEL: INFO

# LOG_FILE: Path to log file
# - All logs are written to this file
# - Automatic file rotation is supported when reaching certain size
# - Make sure directory exists and application has write permissions
# - Log format: timestamp, level, module, message
LOG_FILE: ./logs/bot.log


# ───────────────────────────────────────────────────────────────────────────────
# User Access Control
# ───────────────────────────────────────────────────────────────────────────────
# Security settings to restrict access to the bot.

# ALLOWED_USER_IDS: List of allowed Telegram user IDs
#
# Format:
# - Empty string ("") - access allowed for all users (unsafe for production!)
#
# - Single ID: "123456789"
#
# - Multiple IDs (comma-separated): "123456789,987654321,555555555"
#
# How to find your Telegram ID:
# 1. Message @userinfobot bot in Telegram
# 2. Or use @getmyid_bot
# 3. ID will be shown in response message
#
# IMPORTANT: In production environment ALWAYS specify specific user IDs!
#
# Example for multiple users:
# ALLOWED_USER_IDS: "123456789,987654321"
ALLOWED_USER_IDS: ""


# ───────────────────────────────────────────────────────────────────────────────
# Agent Configuration
# ───────────────────────────────────────────────────────────────────────────────
# AI agent settings that process user requests and perform tasks.

# AGENT_TYPE: Type of agent to use
#
# Available options:
#
# - "stub": Stub for testing without real AI
#          Returns fixed responses, doesn't require API keys
#          Use only for development and testing
#
# - "qwen_code": Agent based on Qwen AI via API
#               Requires QWEN_API_KEY in .env file
#               Less stable, may have issues with tools
#
# - "qwen_code_cli": Agent based on Qwen AI via command line (RECOMMENDED)
#                   Requires installed qwen CLI tool
#                   Most stable option with full tool support
#                   Supports code, files, web search operations
AGENT_TYPE: "qwen_code_cli"

# AGENT_MODEL: AI model to use (for qwen_code type)
#
# Available Qwen models:
#
# - "qwen-max": Most advanced model, best response quality
#              Recommended for complex tasks
#
# - "qwen-plus": Balanced model, good quality/speed ratio
#
# - "qwen-turbo": Fast model for simple tasks
#
# NOTE: This setting is only used if AGENT_TYPE="qwen_code"
# For qwen_code_cli the model is set in CLI tool configuration
AGENT_MODEL: "qwen-max"

# AGENT_QWEN_CLI_PATH: Path to qwen CLI executable
#
# - "qwen": CLI available through PATH (recommended)
#
# - "/usr/local/bin/qwen": Absolute path to executable
#
# - "./bin/qwen": Relative path from project root
#
# Installing qwen CLI:
# 1. Follow instructions at https://github.com/QwenLM/Qwen-Agent
# 2. After installation check: qwen --version
#
# NOTE: Only used if AGENT_TYPE="qwen_code_cli"
AGENT_QWEN_CLI_PATH: "qwen"

# AGENT_TIMEOUT: Maximum time for agent operation execution (in seconds)
#
# - Prevents hanging during long operations
#
# - If operation exceeds this time, it will be interrupted
#
# - Recommended values:
#   * Simple requests: 60-120 seconds
#   * Complex tasks with code: 300-600 seconds (5-10 minutes)
#   * Very complex processing: 900-1800 seconds (15-30 minutes)
#
# IMPORTANT: Too short timeout may interrupt useful operations
AGENT_TIMEOUT: 300

# AGENT_ENABLE_WEB_SEARCH: Allow agent to use web search
#
# - true: Agent can search information online to answer questions
#         Useful for getting up-to-date information and reference data
#
# - false: Agent works only with local data
#          More secure, but limits capabilities
#
# NOTE: Requires internet connection and may increase response time
AGENT_ENABLE_WEB_SEARCH: true

# AGENT_ENABLE_GIT: Allow agent to work with Git repositories
#
# - true: Agent can perform Git operations (clone, pull, commit, push, etc.)
#         Required for working with versioning and repositories
#
# - false: Git functions disabled
#
# IMPORTANT: Make sure Git is installed in the system and configured
# (git config user.name and git config user.email must be set)
AGENT_ENABLE_GIT: true

# AGENT_ENABLE_GITHUB: Allow agent to interact with GitHub API
#
# - true: Agent can work with GitHub (create issues, PRs, read code, etc.)
#         Requires GITHUB_TOKEN in .env file for authorization
#
# - false: GitHub integration disabled
#
# Usage:
# - Creating and managing issues
# - Working with pull requests
# - Reading code from public and private repositories
# - Analyzing commit history
AGENT_ENABLE_GITHUB: true

# AGENT_ENABLE_SHELL: Allow agent to execute shell commands
#
# ⚠️ CRITICAL SECURITY WARNING ⚠️
#
# - true: Agent can execute ANY commands in the operating system
#         EXTREMELY DANGEROUS! Can lead to:
#         * File and data deletion
#         * System compromise
#         * Unauthorized access
#         * Malicious code execution
#
# - false: Shell commands forbidden (RECOMMENDED)
#
# IMPORTANT:
# - NEVER enable this option in production environment
# - Use only in isolated test environments
# - Even in development mode use with extreme caution
# - Always verify that agent executes only safe commands
AGENT_ENABLE_SHELL: false

# AGENT_ENABLE_FILE_MANAGEMENT: Allow agent to perform file operations
#
# - true: Agent can create, edit, delete, and move files
#         Useful for organizing knowledge base and managing content
#         Operations include:
#         * Creating new files
#         * Editing existing files
#         * Deleting files
#         * Moving/renaming files
#         * Working with multiple files at once
#
# - false: File operations disabled
#
# IMPORTANT:
# - File operations are restricted to knowledge base directory by default
# - Agent can modify content, so use with caution
# - Recommended: true for knowledge base management
AGENT_ENABLE_FILE_MANAGEMENT: true

# AGENT_ENABLE_FOLDER_MANAGEMENT: Allow agent to perform folder operations
#
# - true: Agent can create, delete, and move folders
#         Useful for organizing knowledge base structure
#         Operations include:
#         * Creating new folders/directories
#         * Deleting folders (with contents)
#         * Moving/renaming folders
#         * Organizing hierarchical structure
#
# - false: Folder operations disabled
#
# IMPORTANT:
# - Folder operations are restricted to knowledge base directory by default
# - Deleting folders will remove all contents
# - Recommended: true for knowledge base organization
AGENT_ENABLE_FOLDER_MANAGEMENT: true
