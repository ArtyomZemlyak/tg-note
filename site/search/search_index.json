{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to tg-note Documentation","text":"**Intelligent Knowledge Base Builder**  Telegram bot that automatically transforms your messages, reposts, and articles into a structured knowledge base using AI agents.  [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT) [![Python 3.11+](https://img.shields.io/badge/python-3.11+-blue.svg)](https://www.python.org/downloads/)  [Get Started](getting-started/quick-start.md){ .md-button .md-button--primary } [View on GitHub](https://github.com/ArtyomZemlyak/tg-note){ .md-button }"},{"location":"#what-is-tg-note","title":"What is tg-note?","text":"<p>tg-note is a Telegram bot that acts as your personal knowledge curator. It receives messages, reposts, and articles through Telegram, analyzes them using AI agent systems, and automatically saves the important information to your GitHub-based knowledge base in structured Markdown format.</p> <p>Perfect for:</p> <ul> <li>\ud83d\udcda Building a personal knowledge base from Telegram channels</li> <li>\ud83d\udd2c Organizing research papers and scientific articles</li> <li>\ud83d\udcf0 Archiving news and insights from multiple sources</li> <li>\ud83e\udde0 Creating a searchable second brain</li> </ul>"},{"location":"#key-features","title":"Key Features","text":"<ul> <li> <p> AI-Powered Analysis</p> <p>Intelligent content categorization and structuring using advanced agent systems</p> </li> <li> <p> Automatic Markdown</p> <p>Converts any content into well-formatted Markdown files with proper structure</p> </li> <li> <p> Smart Organization</p> <p>Automatic categorization by topics (AI, biology, physics, tech, etc.)</p> </li> <li> <p> GitHub Integration</p> <p>Direct commits to your knowledge base repository with version control</p> </li> <li> <p> Multi-User Support</p> <p>Each user can have their own personal knowledge base</p> </li> <li> <p> Flexible Configuration</p> <p>Configure bot settings directly via Telegram commands</p> </li> </ul>"},{"location":"#quick-start","title":"Quick Start","text":"<p>Get started with tg-note in just a few minutes:</p> 1. Installation2. Configuration3. Run <pre><code>git clone https://github.com/ArtyomZemlyak/tg-note.git\ncd tg-note\npoetry install\n</code></pre> <pre><code># Copy configuration files\ncp config.example.yaml config.yaml\n\n# Add your Telegram bot token to .env\necho \"TELEGRAM_BOT_TOKEN=your_token_here\" &gt; .env\n</code></pre> <pre><code>poetry run python main.py\n</code></pre> <p>Full Installation Guide \u2192</p>"},{"location":"#agent-types","title":"Agent Types","text":"<p>Choose the right agent for your needs:</p>"},{"location":"#qwen-code-cli-recommended","title":"Qwen Code CLI (Recommended)","text":"<p>Uses Qwen Code CLI for advanced AI processing.</p> <ul> <li>\u2705 Full integration with Qwen3-Coder models</li> <li>\u2705 Automatic TODO planning</li> <li>\u2705 Built-in tools: web search, git, github, shell</li> <li>\u2705 Free tier: 2000 requests/day</li> </ul> <p>Learn More \u2192</p>"},{"location":"#qwen-code-agent","title":"Qwen Code Agent","text":"<p>Pure Python agent with custom tools.</p> <ul> <li>\u2705 Python-native implementation</li> <li>\u2705 Flexible tool configuration</li> <li>\u2705 Custom TODO planning</li> </ul> <p>Learn More \u2192</p>"},{"location":"#stub-agent","title":"Stub Agent","text":"<p>Simple stub agent for testing and MVP.</p> <ul> <li>\u26a1 Fast and lightweight</li> <li>\ud83d\udd27 No external dependencies</li> <li>\ud83e\uddea Perfect for testing</li> </ul> <p>Learn More \u2192</p>"},{"location":"#architecture-overview","title":"Architecture Overview","text":"<pre><code>graph TD\n    A[Telegram Bot] --&gt; B[Message Processor]\n    B --&gt; C[Agent System]\n    C --&gt; D[Knowledge Base Manager]\n    D --&gt; E[Git Operations]\n\n    style A fill:#e1f5ff\n    style C fill:#fff3e0\n    style D fill:#f3e5f5\n    style E fill:#e8f5e9\n</code></pre> <p>Detailed Architecture \u2192</p>"},{"location":"#documentation-sections","title":"Documentation Sections","text":"<ul> <li> <p> Getting Started</p> <p>Installation, configuration, and first steps</p> <p> Start Here</p> </li> <li> <p> User Guide</p> <p>Commands, content management, and settings</p> <p> Read Guide</p> </li> <li> <p> Agent System</p> <p>AI agents, tools, and autonomous processing</p> <p> Explore Agents</p> </li> <li> <p> Architecture</p> <p>System design and component details</p> <p> View Architecture</p> </li> <li> <p> Development</p> <p>Contributing, testing, and code quality</p> <p> Start Contributing</p> </li> <li> <p> Deployment</p> <p>Production setup, Docker, and CI/CD</p> <p> Deploy</p> </li> </ul>"},{"location":"#community-support","title":"Community &amp; Support","text":"<ul> <li> GitHub Repository</li> <li> Issue Tracker</li> <li> Discussions</li> </ul>"},{"location":"#license","title":"License","text":"<p>This project is licensed under the MIT License - see the LICENSE file for details.</p>   **Built with \u2764\ufe0f by [Artem Zemliak](https://github.com/ArtyomZemlyak)**  \u2b50 Star this repository if you find it helpful!"},{"location":"agents/autonomous-agent/","title":"Autonomous Agent Guide","text":"<p>Understanding autonomous agent architecture.</p>"},{"location":"agents/autonomous-agent/#overview","title":"Overview","text":"<p>Autonomous agents make their own decisions about which actions to take to accomplish goals.</p>"},{"location":"agents/autonomous-agent/#features","title":"Features","text":"<ul> <li>Self-planning capability</li> <li>Dynamic tool execution</li> <li>Adaptive behavior</li> </ul>"},{"location":"agents/autonomous-agent/#see-also","title":"See Also","text":"<ul> <li>Agent Overview</li> </ul>"},{"location":"agents/kb-reading-tools/","title":"Knowledge Base Reading Tools","text":"<p>\u0410\u0432\u0442\u043e\u043d\u043e\u043c\u043d\u044b\u0439 \u0430\u0433\u0435\u043d\u0442 \u0442\u0435\u043f\u0435\u0440\u044c \u0438\u043c\u0435\u0435\u0442 \u043d\u0430\u0431\u043e\u0440 \u0438\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442\u043e\u0432 \u0434\u043b\u044f \u0447\u0442\u0435\u043d\u0438\u044f \u0438 \u043f\u043e\u0438\u0441\u043a\u0430 \u0432 \u0431\u0430\u0437\u0435 \u0437\u043d\u0430\u043d\u0438\u0439. \u042d\u0442\u0438 \u0438\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442\u044b \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u044e\u0442 \u0430\u0433\u0435\u043d\u0442\u0443 \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c \u0441 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0432 KB \u043f\u0435\u0440\u0435\u0434 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435\u043c \u043d\u043e\u0432\u043e\u0433\u043e \u043a\u043e\u043d\u0442\u0435\u043d\u0442\u0430.</p>"},{"location":"agents/kb-reading-tools/#_1","title":"\u0414\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0435 \u0438\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442\u044b","text":""},{"location":"agents/kb-reading-tools/#1-kb_read_file-","title":"1. <code>kb_read_file</code> - \u0427\u0442\u0435\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u043e\u0432","text":"<p>\u0427\u0438\u0442\u0430\u0435\u0442 \u043e\u0434\u0438\u043d \u0438\u043b\u0438 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0444\u0430\u0439\u043b\u043e\u0432 \u0438\u0437 \u0431\u0430\u0437\u044b \u0437\u043d\u0430\u043d\u0438\u0439.</p> <p>\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b: - <code>paths</code> (array of strings, \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439) - \u0421\u043f\u0438\u0441\u043e\u043a \u043e\u0442\u043d\u043e\u0441\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u043f\u0443\u0442\u0435\u0439 \u043a \u0444\u0430\u0439\u043b\u0430\u043c</p> <p>\u041f\u0440\u0438\u043c\u0435\u0440 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f: <pre><code>{\n  \"paths\": [\"topics/ai/neural-networks.md\", \"topics/tech/python.md\"]\n}\n</code></pre></p> <p>\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442: <pre><code>{\n  \"success\": true,\n  \"files_read\": 2,\n  \"results\": [\n    {\n      \"path\": \"topics/ai/neural-networks.md\",\n      \"full_path\": \"/path/to/kb/topics/ai/neural-networks.md\",\n      \"content\": \"# Neural Networks\\n\\n...\",\n      \"size\": 1234\n    }\n  ],\n  \"errors\": null\n}\n</code></pre></p> <p>\u041e\u0441\u043e\u0431\u0435\u043d\u043d\u043e\u0441\u0442\u0438: - \u041f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442 \u0447\u0442\u0435\u043d\u0438\u0435 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u0444\u0430\u0439\u043b\u043e\u0432 \u0437\u0430 \u043e\u0434\u0438\u043d \u0432\u044b\u0437\u043e\u0432 - \u0412\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f \u043f\u0443\u0442\u0435\u0439 \u0434\u043b\u044f \u043f\u0440\u0435\u0434\u043e\u0442\u0432\u0440\u0430\u0449\u0435\u043d\u0438\u044f path traversal \u0430\u0442\u0430\u043a - \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u0438 \u043c\u0435\u0442\u0430\u0434\u0430\u043d\u043d\u044b\u0435 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430 - \u041e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u043e\u0448\u0438\u0431\u043a\u0438 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430</p>"},{"location":"agents/kb-reading-tools/#2-kb_list_directory-","title":"2. <code>kb_list_directory</code> - \u041f\u0435\u0440\u0435\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0435 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0433\u043e \u043f\u0430\u043f\u043a\u0438","text":"<p>\u041f\u0435\u0440\u0435\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u0444\u0430\u0439\u043b\u044b \u0438 \u043f\u0430\u043f\u043a\u0438 \u0432 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0439 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438.</p> <p>\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b: - <code>path</code> (string, \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439) - \u041e\u0442\u043d\u043e\u0441\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u043f\u0443\u0442\u044c \u043a \u043f\u0430\u043f\u043a\u0435. \u041f\u0443\u0441\u0442\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u0434\u043b\u044f \u043a\u043e\u0440\u043d\u044f. - <code>recursive</code> (boolean, \u043e\u043f\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u044b\u0439) - \u0420\u0435\u043a\u0443\u0440\u0441\u0438\u0432\u043d\u043e \u043f\u0435\u0440\u0435\u0447\u0438\u0441\u043b\u0438\u0442\u044c \u0432\u0441\u0435 \u043f\u043e\u0434\u043f\u0430\u043f\u043a\u0438 (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e <code>false</code>)</p> <p>\u041f\u0440\u0438\u043c\u0435\u0440 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f: <pre><code>{\n  \"path\": \"topics/ai\",\n  \"recursive\": false\n}\n</code></pre></p> <p>\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442: <pre><code>{\n  \"success\": true,\n  \"path\": \"topics/ai\",\n  \"recursive\": false,\n  \"files\": [\n    {\n      \"path\": \"topics/ai/neural-networks.md\",\n      \"name\": \"neural-networks.md\",\n      \"size\": 1234\n    }\n  ],\n  \"directories\": [\n    {\n      \"path\": \"topics/ai/machine-learning\",\n      \"name\": \"machine-learning\"\n    }\n  ],\n  \"file_count\": 1,\n  \"directory_count\": 1\n}\n</code></pre></p> <p>\u041e\u0441\u043e\u0431\u0435\u043d\u043d\u043e\u0441\u0442\u0438: - \u041c\u043e\u0436\u0435\u0442 \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0440\u0435\u043a\u0443\u0440\u0441\u0438\u0432\u043d\u043e \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0432\u0441\u0435\u0433\u043e \u0434\u0435\u0440\u0435\u0432\u0430 \u0444\u0430\u0439\u043b\u043e\u0432 - \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e \u0444\u0430\u0439\u043b\u044b \u0438 \u043f\u0430\u043f\u043a\u0438 - \u0412\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0440\u0430\u0437\u043c\u0435\u0440 \u0444\u0430\u0439\u043b\u043e\u0432 - \u0411\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u0430\u044f \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f \u043f\u0443\u0442\u0435\u0439</p>"},{"location":"agents/kb-reading-tools/#3-kb_search_files-","title":"3. <code>kb_search_files</code> - \u041f\u043e\u0438\u0441\u043a \u0444\u0430\u0439\u043b\u043e\u0432 \u043f\u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044e","text":"<p>\u0418\u0449\u0435\u0442 \u0444\u0430\u0439\u043b\u044b \u0438 \u043f\u0430\u043f\u043a\u0438 \u043f\u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044e \u0438\u043b\u0438 glob-\u0448\u0430\u0431\u043b\u043e\u043d\u0443.</p> <p>\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b: - <code>pattern</code> (string, \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439) - \u0428\u0430\u0431\u043b\u043e\u043d \u043f\u043e\u0438\u0441\u043a\u0430 (\u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442 glob: <code>*</code>, <code>?</code>, <code>[]</code>) - <code>case_sensitive</code> (boolean, \u043e\u043f\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u044b\u0439) - \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u043e\u0437\u0430\u0432\u0438\u0441\u0438\u043c\u044b\u0439 \u043f\u043e\u0438\u0441\u043a (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e <code>false</code>)</p> <p>\u041f\u0440\u0438\u043c\u0435\u0440\u044b \u0448\u0430\u0431\u043b\u043e\u043d\u043e\u0432: - <code>*.md</code> - \u0432\u0441\u0435 markdown \u0444\u0430\u0439\u043b\u044b - <code>ai/**/*.md</code> - \u0432\u0441\u0435 markdown \u0444\u0430\u0439\u043b\u044b \u0432 \u043f\u0430\u043f\u043a\u0435 ai \u0438 \u043f\u043e\u0434\u043f\u0430\u043f\u043a\u0430\u0445 - <code>*neural*</code> - \u0444\u0430\u0439\u043b\u044b \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0435 \"neural\" \u0432 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0438</p> <p>\u041f\u0440\u0438\u043c\u0435\u0440 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f: <pre><code>{\n  \"pattern\": \"*neural*.md\",\n  \"case_sensitive\": false\n}\n</code></pre></p> <p>\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442: <pre><code>{\n  \"success\": true,\n  \"pattern\": \"*neural*.md\",\n  \"case_sensitive\": false,\n  \"files\": [\n    {\n      \"path\": \"topics/ai/neural-networks.md\",\n      \"name\": \"neural-networks.md\",\n      \"size\": 1234\n    }\n  ],\n  \"directories\": [],\n  \"file_count\": 1,\n  \"directory_count\": 0\n}\n</code></pre></p> <p>\u041e\u0441\u043e\u0431\u0435\u043d\u043d\u043e\u0441\u0442\u0438: - \u041f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0430 glob-\u0448\u0430\u0431\u043b\u043e\u043d\u043e\u0432 - \u041f\u043e\u0438\u0441\u043a \u043a\u0430\u043a \u043f\u043e \u043f\u043e\u043b\u043d\u043e\u043c\u0443 \u043f\u0443\u0442\u0438, \u0442\u0430\u043a \u0438 \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u043e \u0438\u043c\u0435\u043d\u0438 \u0444\u0430\u0439\u043b\u0430 - \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u043e\u043d\u0435\u0437\u0430\u0432\u0438\u0441\u0438\u043c\u044b\u0439 \u043f\u043e\u0438\u0441\u043a \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e - \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438 \u0444\u0430\u0439\u043b\u044b, \u0438 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438</p>"},{"location":"agents/kb-reading-tools/#4-kb_search_content-","title":"4. <code>kb_search_content</code> - \u041f\u043e\u0438\u0441\u043a \u043f\u043e \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u043c\u0443","text":"<p>\u0418\u0449\u0435\u0442 \u0442\u0435\u043a\u0441\u0442 \u0432\u043d\u0443\u0442\u0440\u0438 \u0444\u0430\u0439\u043b\u043e\u0432 \u0432 \u0431\u0430\u0437\u0435 \u0437\u043d\u0430\u043d\u0438\u0439.</p> <p>\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b: - <code>query</code> (string, \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439) - \u0422\u0435\u043a\u0441\u0442 \u0434\u043b\u044f \u043f\u043e\u0438\u0441\u043a\u0430 - <code>case_sensitive</code> (boolean, \u043e\u043f\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u044b\u0439) - \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u043e\u0437\u0430\u0432\u0438\u0441\u0438\u043c\u044b\u0439 \u043f\u043e\u0438\u0441\u043a (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e <code>false</code>) - <code>file_pattern</code> (string, \u043e\u043f\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u044b\u0439) - Glob \u0448\u0430\u0431\u043b\u043e\u043d \u0434\u043b\u044f \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u0438 \u0444\u0430\u0439\u043b\u043e\u0432 (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e <code>*.md</code>)</p> <p>\u041f\u0440\u0438\u043c\u0435\u0440 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f: <pre><code>{\n  \"query\": \"machine learning\",\n  \"case_sensitive\": false,\n  \"file_pattern\": \"*.md\"\n}\n</code></pre></p> <p>\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442: <pre><code>{\n  \"success\": true,\n  \"query\": \"machine learning\",\n  \"case_sensitive\": false,\n  \"file_pattern\": \"*.md\",\n  \"matches\": [\n    {\n      \"path\": \"topics/ai/neural-networks.md\",\n      \"name\": \"neural-networks.md\",\n      \"occurrences\": 3,\n      \"matches\": [\n        {\n          \"line_number\": 5,\n          \"line\": \"Machine learning is a subset of AI\",\n          \"context\": \"# Introduction\\n\\nMachine learning is a subset of AI\\nthat focuses on...\"\n        }\n      ]\n    }\n  ],\n  \"files_found\": 1\n}\n</code></pre></p> <p>\u041e\u0441\u043e\u0431\u0435\u043d\u043d\u043e\u0441\u0442\u0438: - \u041f\u043e\u043b\u043d\u043e\u0442\u0435\u043a\u0441\u0442\u043e\u0432\u044b\u0439 \u043f\u043e\u0438\u0441\u043a \u043f\u043e \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u043c\u0443 \u0444\u0430\u0439\u043b\u043e\u0432 - \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043d\u043e\u043c\u0435\u0440\u0430 \u0441\u0442\u0440\u043e\u043a \u0438 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442 \u0432\u043e\u043a\u0440\u0443\u0433 \u043d\u0430\u0439\u0434\u0435\u043d\u043d\u043e\u0433\u043e \u0442\u0435\u043a\u0441\u0442\u0430 - \u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u0435: \u043f\u0435\u0440\u0432\u044b\u0435 5 \u0441\u043e\u0432\u043f\u0430\u0434\u0435\u043d\u0438\u0439 \u043d\u0430 \u0444\u0430\u0439\u043b - \u0424\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u044f \u043f\u043e \u0442\u0438\u043f\u0443 \u0444\u0430\u0439\u043b\u043e\u0432 \u0447\u0435\u0440\u0435\u0437 glob-\u0448\u0430\u0431\u043b\u043e\u043d - \u042d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u044b\u0439 \u043f\u043e\u0438\u0441\u043a \u0442\u043e\u043b\u044c\u043a\u043e \u0432 \u043d\u0443\u0436\u043d\u044b\u0445 \u0444\u0430\u0439\u043b\u0430\u0445</p>"},{"location":"agents/kb-reading-tools/#_2","title":"\u0411\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u044c","text":"<p>\u0412\u0441\u0435 \u0438\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442\u044b \u0432\u043a\u043b\u044e\u0447\u0430\u044e\u0442 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044e \u043f\u0443\u0442\u0435\u0439 \u0434\u043b\u044f \u043f\u0440\u0435\u0434\u043e\u0442\u0432\u0440\u0430\u0449\u0435\u043d\u0438\u044f: - Path traversal \u0430\u0442\u0430\u043a (<code>../../../etc/passwd</code>) - \u0414\u043e\u0441\u0442\u0443\u043f\u0430 \u0437\u0430 \u043f\u0440\u0435\u0434\u0435\u043b\u044b \u043a\u043e\u0440\u043d\u044f \u0431\u0430\u0437\u044b \u0437\u043d\u0430\u043d\u0438\u0439 - \u0427\u0442\u0435\u043d\u0438\u044f \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u044b\u0445 \u0444\u0430\u0439\u043b\u043e\u0432</p> <p>\u0412\u0441\u0435 \u043f\u0443\u0442\u0438 \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u043e\u0442\u043d\u043e\u0441\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c\u0438 \u0438 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u044c\u0441\u044f \u0432\u043d\u0443\u0442\u0440\u0438 <code>kb_root_path</code>.</p>"},{"location":"agents/kb-reading-tools/#_3","title":"\u041f\u0440\u0438\u043c\u0435\u0440\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f","text":""},{"location":"agents/kb-reading-tools/#1","title":"\u0421\u0446\u0435\u043d\u0430\u0440\u0438\u0439 1: \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0433\u043e \u043a\u043e\u043d\u0442\u0435\u043d\u0442\u0430 \u043f\u0435\u0440\u0435\u0434 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435\u043c","text":"<pre><code># \u0410\u0433\u0435\u043d\u0442 \u0441\u043d\u0430\u0447\u0430\u043b\u0430 \u0438\u0449\u0435\u0442 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u0444\u0430\u0439\u043b\u044b \u043e \u043d\u0435\u0439\u0440\u043e\u043d\u043d\u044b\u0445 \u0441\u0435\u0442\u044f\u0445\nresult = await agent._execute_tool({\n    \"tool_name\": \"kb_search_files\",\n    \"tool_params\": {\"pattern\": \"*neural*.md\"}\n})\n\n# \u0415\u0441\u043b\u0438 \u043d\u0430\u0445\u043e\u0434\u0438\u0442, \u0447\u0438\u0442\u0430\u0435\u0442 \u0438\u0445\nif result[\"file_count\"] &gt; 0:\n    read_result = await agent._execute_tool({\n        \"tool_name\": \"kb_read_file\",\n        \"tool_params\": {\"paths\": [f[\"path\"] for f in result[\"files\"]]}\n    })\n    # \u0410\u043d\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u0435\u0442 \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u0438 \u0434\u043e\u043f\u043e\u043b\u043d\u044f\u0435\u0442, \u0430 \u043d\u0435 \u0434\u0443\u0431\u043b\u0438\u0440\u0443\u0435\u0442\n</code></pre>"},{"location":"agents/kb-reading-tools/#2","title":"\u0421\u0446\u0435\u043d\u0430\u0440\u0438\u0439 2: \u0421\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0435 \u0438\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u0435 \u0431\u0430\u0437\u044b \u0437\u043d\u0430\u043d\u0438\u0439","text":"<pre><code># \u0421\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0439\ncategories = await agent._execute_tool({\n    \"tool_name\": \"kb_list_directory\",\n    \"tool_params\": {\"path\": \"topics\", \"recursive\": False}\n})\n\n# \u0414\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0439 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0438 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0443\nfor category in categories[\"directories\"]:\n    files = await agent._execute_tool({\n        \"tool_name\": \"kb_list_directory\",\n        \"tool_params\": {\"path\": category[\"path\"], \"recursive\": True}\n    })\n</code></pre>"},{"location":"agents/kb-reading-tools/#3","title":"\u0421\u0446\u0435\u043d\u0430\u0440\u0438\u0439 3: \u041f\u043e\u0438\u0441\u043a \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u0445 \u0442\u0435\u043c","text":"<pre><code># \u0418\u0449\u0435\u0442 \u0432\u0441\u0435 \u0443\u043f\u043e\u043c\u0438\u043d\u0430\u043d\u0438\u044f \"Python\" \u0432 \u0431\u0430\u0437\u0435\npython_refs = await agent._execute_tool({\n    \"tool_name\": \"kb_search_content\",\n    \"tool_params\": {\n        \"query\": \"Python\",\n        \"file_pattern\": \"*.md\"\n    }\n})\n\n# \u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u043a\u0430\u0440\u0442\u0443 \u0441\u0432\u044f\u0437\u0435\u0439 \u043c\u0435\u0436\u0434\u0443 \u0442\u0435\u043c\u0430\u043c\u0438\n</code></pre>"},{"location":"agents/kb-reading-tools/#_4","title":"\u0418\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044f \u0441 \u0430\u0433\u0435\u043d\u0442\u0441\u043a\u0438\u043c \u0446\u0438\u043a\u043b\u043e\u043c","text":"<p>\u042d\u0442\u0438 \u0438\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442\u044b \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b \u0432 \u0430\u0433\u0435\u043d\u0442\u0441\u043a\u043e\u043c \u0446\u0438\u043a\u043b\u0435 \u0438 \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u0432\u044b\u0437\u0432\u0430\u043d\u044b LLM \u0447\u0435\u0440\u0435\u0437 function calling:</p> <pre><code>agent = AutonomousAgent(\n    llm_connector=openai_connector,\n    kb_root_path=Path(\"./my_knowledge_base\")\n)\n\n# LLM \u043c\u043e\u0436\u0435\u0442 \u0440\u0435\u0448\u0438\u0442\u044c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043b\u044e\u0431\u043e\u0439 \u0438\u0437 \u044d\u0442\u0438\u0445 \u0438\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442\u043e\u0432\n# \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u0437\u0430\u0434\u0430\u0447\u0438 \u0438 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0430\nresult = await agent.process({\n    \"text\": \"Find and summarize all articles about machine learning\"\n})\n</code></pre> <p>LLM \u0441\u0430\u043c \u0440\u0435\u0448\u0430\u0435\u0442: 1. \u041a\u0430\u043a\u0438\u0435 \u0438\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c 2. \u0412 \u043a\u0430\u043a\u043e\u043c \u043f\u043e\u0440\u044f\u0434\u043a\u0435 \u0438\u0445 \u0432\u044b\u0437\u044b\u0432\u0430\u0442\u044c 3. \u041a\u0430\u043a \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0438\u0442\u044c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b</p>"},{"location":"agents/kb-reading-tools/#_5","title":"\u041f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c","text":"<p>\u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0430\u0446\u0438\u0438:</p> <ol> <li>kb_read_file: \u0427\u0438\u0442\u0430\u0439\u0442\u0435 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0444\u0430\u0439\u043b\u043e\u0432 \u0437\u0430 \u0440\u0430\u0437, \u043d\u043e \u043d\u0435 \u0431\u043e\u043b\u0435\u0435 10-20 \u043e\u0434\u043d\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e</li> <li>kb_list_directory: \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 <code>recursive=false</code> \u043a\u043e\u0433\u0434\u0430 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e</li> <li>kb_search_files: \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u0441\u043f\u0435\u0446\u0438\u0444\u0438\u0447\u043d\u044b\u0435 \u0448\u0430\u0431\u043b\u043e\u043d\u044b \u0432\u043c\u0435\u0441\u0442\u043e <code>*</code></li> <li>kb_search_content: \u0423\u043a\u0430\u0437\u044b\u0432\u0430\u0439\u0442\u0435 <code>file_pattern</code> \u0434\u043b\u044f \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u0438 \u043f\u043e\u0438\u0441\u043a\u0430</li> </ol> <p>\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f:</p> <ul> <li><code>kb_search_content</code> \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u043a\u0441\u0438\u043c\u0443\u043c 5 \u0441\u043e\u0432\u043f\u0430\u0434\u0435\u043d\u0438\u0439 \u043d\u0430 \u0444\u0430\u0439\u043b</li> <li>\u0412\u0441\u0435 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u044e\u0442\u0441\u044f \u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u043e (\u0432 \u0431\u0443\u0434\u0443\u0449\u0435\u043c \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u044b)</li> <li>\u0420\u0435\u043a\u0443\u0440\u0441\u0438\u0432\u043d\u044b\u0439 listing \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043c\u0435\u0434\u043b\u0435\u043d\u043d\u044b\u043c \u043d\u0430 \u0431\u043e\u043b\u044c\u0448\u0438\u0445 \u0431\u0430\u0437\u0430\u0445</li> </ul>"},{"location":"agents/kb-reading-tools/#_6","title":"\u0420\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435","text":"<p>\u0414\u043b\u044f \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043d\u043e\u0432\u044b\u0445 \u0438\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442\u043e\u0432 \u0447\u0442\u0435\u043d\u0438\u044f KB:</p> <ol> <li>\u0421\u043e\u0437\u0434\u0430\u0439\u0442\u0435 \u043c\u0435\u0442\u043e\u0434 <code>_tool_kb_your_tool</code> \u0432 <code>AutonomousAgent</code></li> <li>\u0417\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u0443\u0439\u0442\u0435 \u0432 <code>_register_all_tools()</code></li> <li>\u0414\u043e\u0431\u0430\u0432\u044c\u0442\u0435 \u0441\u0445\u0435\u043c\u0443 \u0432 <code>_build_tools_schema()</code></li> <li>\u0414\u043e\u0431\u0430\u0432\u044c\u0442\u0435 \u0442\u0435\u0441\u0442\u044b \u0432 <code>tests/test_kb_reading_tools.py</code></li> </ol> <p>\u041f\u0440\u0438\u043c\u0435\u0440: <pre><code>async def _tool_kb_get_stats(self, params: Dict[str, Any]) -&gt; Dict[str, Any]:\n    \"\"\"Get statistics about knowledge base\"\"\"\n    # Implementation\n    pass\n</code></pre></p>"},{"location":"agents/overview/","title":"Agent System Overview","text":"<p>Understanding the AI agent system in tg-note.</p>"},{"location":"agents/overview/#what-are-agents","title":"What are Agents?","text":"<p>Agents are AI-powered systems that process your messages and transform them into structured knowledge base entries. They analyze content, categorize it, extract key information, and generate well-formatted Markdown files.</p>"},{"location":"agents/overview/#available-agents","title":"Available Agents","text":"<p>tg-note supports three types of agents, each with different capabilities and use cases.</p>"},{"location":"agents/overview/#comparison-table","title":"Comparison Table","text":"Feature Qwen Code CLI Qwen Code (Autonomous) Stub AI Processing \u2705 Advanced \u2705 Good \u274c Basic Auto Planning \u2705 Yes \u26a0\ufe0f Limited \u274c No Web Search \u2705 Built-in \u2705 Custom \u274c No Git Operations \u2705 Built-in \u2705 Custom \u274c No External Dependencies Node.js None None Free Tier 2000/day API costs Free Best For Production Custom needs Testing/MVP"},{"location":"agents/overview/#1-qwen-code-cli-recommended","title":"1. Qwen Code CLI \u2b50 Recommended","text":"<p>The most powerful agent using the official Qwen Code CLI tool.</p>"},{"location":"agents/overview/#features","title":"Features","text":"<ul> <li>\u2705 Advanced AI Processing - Qwen3-Coder models</li> <li>\u2705 Automatic Planning - Creates and executes TODO plans</li> <li>\u2705 Built-in Tools - Web search, Git, GitHub, Shell</li> <li>\u2705 Vision Support - Can analyze images</li> <li>\u2705 Free Tier - 2000 requests/day, 60 req/min</li> </ul>"},{"location":"agents/overview/#installation","title":"Installation","text":"<pre><code># Install Node.js 20+\nnpm install -g @qwen-code/qwen-code@latest\n\n# Authenticate\nqwen\n\n# Configure\nAGENT_TYPE: \"qwen_code_cli\"\n</code></pre>"},{"location":"agents/overview/#when-to-use","title":"When to Use","text":"<ul> <li>\u2705 Production deployments</li> <li>\u2705 Need best quality output</li> <li>\u2705 Want automatic planning</li> <li>\u2705 Can install Node.js</li> </ul> <p>Full Documentation \u2192</p>"},{"location":"agents/overview/#2-qwen-code-agent-python-autonomous","title":"2. Qwen Code Agent (Python Autonomous)","text":"<p>Pure Python agent with customizable tools.</p>"},{"location":"agents/overview/#features_1","title":"Features","text":"<ul> <li>\u2705 Python Native - No Node.js required</li> <li>\u2705 Custom Tools - Build your own tool integrations</li> <li>\u2705 Flexible - Full control over processing</li> <li>\u26a0\ufe0f API Costs - Requires Qwen API key</li> </ul>"},{"location":"agents/overview/#configuration","title":"Configuration","text":"<pre><code>AGENT_TYPE: \"qwen_code\"\nAGENT_MODEL: \"qwen-max\"\n</code></pre> <p>Note: Internally this maps to the Python autonomous agent implemented in <code>src/agents/autonomous_agent.py</code> via <code>AgentFactory</code>. It can optionally use an OpenAI-compatible API when <code>OPENAI_API_KEY</code>/<code>OPENAI_BASE_URL</code> are provided; otherwise it falls back to rule-based processing.</p>"},{"location":"agents/overview/#when-to-use_1","title":"When to Use","text":"<ul> <li>\u2705 Need Python-only solution</li> <li>\u2705 Custom tool requirements</li> <li>\u2705 Full control over agent behavior</li> <li>\u274c Can't install Node.js</li> </ul> <p>Full Documentation \u2192</p>"},{"location":"agents/overview/#3-stub-agent","title":"3. Stub Agent","text":"<p>Simple testing agent without AI.</p>"},{"location":"agents/overview/#features_2","title":"Features","text":"<ul> <li>\u2705 Fast - No API calls</li> <li>\u2705 Simple - Basic categorization</li> <li>\u2705 No Dependencies - Works out of the box</li> <li>\u274c Limited - No AI analysis</li> </ul>"},{"location":"agents/overview/#configuration_1","title":"Configuration","text":"<pre><code>AGENT_TYPE: \"stub\"\n</code></pre>"},{"location":"agents/overview/#when-to-use_2","title":"When to Use","text":"<ul> <li>\u2705 Testing and development</li> <li>\u2705 MVP/prototype</li> <li>\u2705 No API keys available</li> <li>\u274c Production use</li> </ul> <p>Full Documentation \u2192</p>"},{"location":"agents/overview/#how-agents-work","title":"How Agents Work","text":""},{"location":"agents/overview/#processing-pipeline","title":"Processing Pipeline","text":"<pre><code>graph LR\n    A[Message] --&gt; B[Agent]\n    B --&gt; C{Analyze}\n    C --&gt; D[Categorize]\n    D --&gt; E[Extract Info]\n    E --&gt; F[Generate Markdown]\n    F --&gt; G[Save to KB]\n\n    style B fill:#fff3e0\n    style F fill:#e8f5e9\n</code></pre>"},{"location":"agents/overview/#agent-workflow","title":"Agent Workflow","text":"<ol> <li>Receive Content</li> <li>Text messages</li> <li>URLs</li> <li>Forwarded posts</li> <li> <p>Media</p> </li> <li> <p>Analyze</p> </li> <li>Understand topic</li> <li>Extract key points</li> <li> <p>Identify category</p> </li> <li> <p>Process</p> </li> <li>Search for context (if enabled)</li> <li>Gather additional info</li> <li> <p>Structure content</p> </li> <li> <p>Generate</p> </li> <li>Create Markdown file</li> <li>Add metadata</li> <li> <p>Format properly</p> </li> <li> <p>Save</p> </li> <li>Write to KB</li> <li>Commit to Git</li> <li>Notify user</li> </ol>"},{"location":"agents/overview/#choosing-an-agent","title":"Choosing an Agent","text":""},{"location":"agents/overview/#decision-tree","title":"Decision Tree","text":"<pre><code>graph TD\n    A[Choose Agent] --&gt; B{Can install Node.js?}\n    B --&gt;|Yes| C[Want best quality?]\n    B --&gt;|No| D{Need AI?}\n\n    C --&gt;|Yes| E[Qwen Code CLI \u2b50]\n    C --&gt;|No| D\n\n    D --&gt;|Yes| F[Qwen Code]\n    D --&gt;|No| G[Stub Agent]\n\n    style E fill:#c8e6c9\n    style F fill:#fff9c4\n    style G fill:#ffccbc\n</code></pre>"},{"location":"agents/overview/#recommendations","title":"Recommendations","text":""},{"location":"agents/overview/#for-production","title":"For Production","text":"<p>\u2192 Qwen Code CLI</p> <ul> <li>Best quality results</li> <li>Automatic planning</li> <li>Built-in tools</li> <li>Free tier available</li> </ul>"},{"location":"agents/overview/#for-custom-needs","title":"For Custom Needs","text":"<p>\u2192 Qwen Code</p> <ul> <li>Full Python control</li> <li>Custom tool integration</li> <li>Flexible configuration</li> </ul>"},{"location":"agents/overview/#for-testing","title":"For Testing","text":"<p>\u2192 Stub Agent</p> <ul> <li>Quick setup</li> <li>No dependencies</li> <li>Fast iteration</li> </ul>"},{"location":"agents/overview/#agent-configuration","title":"Agent Configuration","text":""},{"location":"agents/overview/#global-settings","title":"Global Settings","text":"<p>Set in <code>config.yaml</code>:</p> <pre><code># Agent Selection\nAGENT_TYPE: \"qwen_code_cli\"\n\n# Common Settings\nAGENT_MODEL: \"qwen-max\"\nAGENT_TIMEOUT: 300\n\n# Tool Permissions\nAGENT_ENABLE_WEB_SEARCH: true\nAGENT_ENABLE_GIT: true\nAGENT_ENABLE_GITHUB: true\nAGENT_ENABLE_SHELL: false\n</code></pre>"},{"location":"agents/overview/#per-user-settings","title":"Per-User Settings","text":"<p>Users can override via Telegram:</p> <pre><code>/agentsettings\n</code></pre>"},{"location":"agents/overview/#agent-capabilities","title":"Agent Capabilities","text":""},{"location":"agents/overview/#content-analysis","title":"Content Analysis","text":"<p>All agents can: - Extract text content - Identify topics - Generate titles - Create metadata</p> <p>Advanced agents (Qwen) add: - Deep semantic understanding - Context enrichment - Smart categorization - Quality summaries</p>"},{"location":"agents/overview/#tool-usage","title":"Tool Usage","text":"Tool Qwen CLI Qwen Code Stub Web Search \u2705 \u2705 \u274c Git Ops \u2705 \u2705 \u274c GitHub API \u2705 \u2705 \u274c Shell \u2705 \u26a0\ufe0f \u274c Vision \u2705 \u274c \u274c"},{"location":"agents/overview/#performance","title":"Performance","text":""},{"location":"agents/overview/#typical-processing-time","title":"Typical Processing Time","text":"Agent Short Text Medium Text Long Text Qwen CLI 5-15s 15-45s 45-120s Qwen Code 3-10s 10-30s 30-90s Stub &lt;1s &lt;1s &lt;1s"},{"location":"agents/overview/#factors-affecting-speed","title":"Factors Affecting Speed","text":"<ul> <li>Content length</li> <li>URL complexity</li> <li>Web search usage</li> <li>API response time</li> <li>Network latency</li> </ul>"},{"location":"agents/overview/#see-also","title":"See Also","text":"<ul> <li>Qwen Code CLI Guide</li> <li>Qwen Code Agent Guide</li> <li>Autonomous Agent Guide</li> <li>Stub Agent Reference</li> </ul>"},{"location":"agents/qwen-cli-debug-trace/","title":"Qwen CLI Agent - DEBUG \u0422\u0440\u0435\u0439\u0441\u0438\u043d\u0433","text":""},{"location":"agents/qwen-cli-debug-trace/#_1","title":"\u041e\u0431\u0437\u043e\u0440","text":"<p>QwenCodeCLIAgent \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442 \u0434\u0435\u0442\u0430\u043b\u044c\u043d\u043e\u0435 DEBUG \u043b\u043e\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0434\u043b\u044f \u043e\u0442\u043b\u0430\u0434\u043a\u0438 \u0438 \u043c\u043e\u043d\u0438\u0442\u043e\u0440\u0438\u043d\u0433\u0430 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f qwen-code CLI \u043a\u043e\u043c\u0430\u043d\u0434\u044b. \u042d\u0442\u043e \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043f\u043e\u043b\u043d\u044b\u0439 \u0442\u0440\u0435\u0439\u0441 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f, \u0432\u043a\u043b\u044e\u0447\u0430\u044f:</p> <ul> <li>\u041a\u043e\u043c\u0430\u043d\u0434\u044b \u0438 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u044b CLI</li> <li>\u0412\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 (\u043f\u0440\u043e\u043c\u043f\u0442)</li> <li>\u0412\u044b\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 (\u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442)</li> <li>\u041f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f</li> <li>\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f</li> <li>\u041e\u0448\u0438\u0431\u043a\u0438 \u0438 \u043f\u0440\u0435\u0434\u0443\u043f\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u044f</li> </ul>"},{"location":"agents/qwen-cli-debug-trace/#_2","title":"\u0411\u044b\u0441\u0442\u0440\u044b\u0439 \u0441\u0442\u0430\u0440\u0442","text":""},{"location":"agents/qwen-cli-debug-trace/#1","title":"1. \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u043b\u043e\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f","text":"<pre><code>from pathlib import Path\nfrom config.logging_config import setup_logging\n\n# \u0412\u043a\u043b\u044e\u0447\u0438\u0442\u044c DEBUG \u043b\u043e\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\nsetup_logging(\n    log_level=\"DEBUG\",\n    log_file=Path(\"logs/qwen_debug.log\"),\n    enable_debug_trace=True\n)\n</code></pre>"},{"location":"agents/qwen-cli-debug-trace/#2","title":"2. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0430\u0433\u0435\u043d\u0442\u0430","text":"<pre><code>from src.agents.qwen_code_cli_agent import QwenCodeCLIAgent\n\n# \u0421\u043e\u0437\u0434\u0430\u0442\u044c \u0430\u0433\u0435\u043d\u0442\u0430\nagent = QwenCodeCLIAgent(\n    enable_web_search=True,\n    enable_git=True,\n    timeout=300\n)\n\n# \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u043a\u043e\u043d\u0442\u0435\u043d\u0442\ncontent = {\n    \"text\": \"\u0412\u0430\u0448 \u0442\u0435\u043a\u0441\u0442 \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438\",\n    \"urls\": [\"https://example.com\"]\n}\n\nresult = await agent.process(content)\n</code></pre>"},{"location":"agents/qwen-cli-debug-trace/#3","title":"3. \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u043b\u043e\u0433\u0438","text":"<p>\u041b\u043e\u0433\u0438 \u0431\u0443\u0434\u0443\u0442 \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u044b \u0432: - <code>logs/qwen_debug.log</code> - \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 \u043b\u043e\u0433 (\u0432\u0441\u0435 \u0443\u0440\u043e\u0432\u043d\u0438) - <code>logs/qwen_debug_debug.log</code> - \u0442\u043e\u043b\u044c\u043a\u043e DEBUG \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f</p>"},{"location":"agents/qwen-cli-debug-trace/#_3","title":"\u0427\u0442\u043e \u043b\u043e\u0433\u0438\u0440\u0443\u0435\u0442\u0441\u044f","text":""},{"location":"agents/qwen-cli-debug-trace/#_4","title":"\u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0430\u0433\u0435\u043d\u0442\u0430","text":"<pre><code>[DEBUG] [QwenCodeCLIAgent._check_cli_available] Checking qwen CLI availability...\n[DEBUG] [QwenCodeCLIAgent._check_cli_available] CLI path: qwen\n[DEBUG] [QwenCodeCLIAgent._check_cli_available] Running command: qwen --version\n[DEBUG] [QwenCodeCLIAgent._check_cli_available] Return code: 0\n[DEBUG] [QwenCodeCLIAgent._check_cli_available] STDOUT: qwen version 1.0.0\n[DEBUG] [QwenCodeCLIAgent._check_cli_available] STDERR: \n</code></pre>"},{"location":"agents/qwen-cli-debug-trace/#cli","title":"\u0412\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 CLI \u043a\u043e\u043c\u0430\u043d\u0434\u044b","text":"<pre><code>[DEBUG] [QwenCodeCLIAgent._execute_qwen_cli] === CLI EXECUTION TRACE START ===\n[DEBUG] [QwenCodeCLIAgent._execute_qwen_cli] Command: qwen\n[DEBUG] [QwenCodeCLIAgent._execute_qwen_cli] Working dir: /workspace\n[DEBUG] [QwenCodeCLIAgent._execute_qwen_cli] Environment variables:\n[DEBUG] [QwenCodeCLIAgent._execute_qwen_cli]   OPENAI_API_KEY=sk-xxxxx...\n[DEBUG] [QwenCodeCLIAgent._execute_qwen_cli]   OPENAI_BASE_URL=https://api.openai.com\n\n[DEBUG] [QwenCodeCLIAgent._execute_qwen_cli] === STDIN (PROMPT) ===\n[DEBUG] [QwenCodeCLIAgent._execute_qwen_cli] Prompt length: 1234 characters\n[DEBUG] [QwenCodeCLIAgent._execute_qwen_cli] Prompt preview (first 500 chars):\nYou are an autonomous content processing agent...\n\n[DEBUG] [QwenCodeCLIAgent._execute_qwen_cli] === FULL PROMPT ===\n[DEBUG] [QwenCodeCLIAgent._execute_qwen_cli]\n&lt;\u043f\u043e\u043b\u043d\u044b\u0439 \u0442\u0435\u043a\u0441\u0442 \u043f\u0440\u043e\u043c\u043f\u0442\u0430&gt;\n[DEBUG] [QwenCodeCLIAgent._execute_qwen_cli] === END FULL PROMPT ===\n\n[DEBUG] [QwenCodeCLIAgent._execute_qwen_cli] Starting subprocess at 1234567890.123\n[DEBUG] [QwenCodeCLIAgent._execute_qwen_cli] Process created with PID: 12345\n[DEBUG] [QwenCodeCLIAgent._execute_qwen_cli] Sending prompt to stdin...\n\n[DEBUG] [QwenCodeCLIAgent._execute_qwen_cli] Process completed in 15.42s\n[DEBUG] [QwenCodeCLIAgent._execute_qwen_cli] Process return code: 0\n\n[DEBUG] [QwenCodeCLIAgent._execute_qwen_cli] === STDERR OUTPUT ===\n[DEBUG] [QwenCodeCLIAgent._execute_qwen_cli] STDERR length: 0 characters\n[DEBUG] [QwenCodeCLIAgent._execute_qwen_cli] STDERR is empty\n[DEBUG] [QwenCodeCLIAgent._execute_qwen_cli] === END STDERR OUTPUT ===\n\n[DEBUG] [QwenCodeCLIAgent._execute_qwen_cli] === STDOUT OUTPUT ===\n[DEBUG] [QwenCodeCLIAgent._execute_qwen_cli] STDOUT length: 5678 characters\n[DEBUG] [QwenCodeCLIAgent._execute_qwen_cli] STDOUT preview (first 500 chars):\n# Machine Learning Article\n...\n\n[DEBUG] [QwenCodeCLIAgent._execute_qwen_cli] === FULL STDOUT ===\n[DEBUG] [QwenCodeCLIAgent._execute_qwen_cli]\n&lt;\u043f\u043e\u043b\u043d\u044b\u0439 \u0442\u0435\u043a\u0441\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430&gt;\n[DEBUG] [QwenCodeCLIAgent._execute_qwen_cli] === END FULL STDOUT ===\n\n[DEBUG] [QwenCodeCLIAgent._execute_qwen_cli] === CLI EXECUTION TRACE END ===\n</code></pre>"},{"location":"agents/qwen-cli-debug-trace/#_5","title":"\u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430","text":"<pre><code>[DEBUG] [QwenCodeCLIAgent] STEP 1: Preparing prompt for qwen-code\n[DEBUG] [QwenCodeCLIAgent] Prepared prompt length: 1234 characters\n\n[DEBUG] [QwenCodeCLIAgent] STEP 2: Executing qwen-code CLI\n[DEBUG] [QwenCodeCLIAgent] Received result length: 5678 characters\n\n[DEBUG] [QwenCodeCLIAgent] STEP 3: Parsing agent response with standard parser\n[DEBUG] [QwenCodeCLIAgent] Result text preview (first 500 chars): ...\n[DEBUG] [QwenCodeCLIAgent] Files created: ['path/to/file.md']\n[DEBUG] [QwenCodeCLIAgent] Folders created: ['path/to/folder']\n\n[DEBUG] [QwenCodeCLIAgent] STEP 4: Extracting KB structure from response\n[DEBUG] [QwenCodeCLIAgent] STEP 5: Extracting title from markdown\n\n[INFO] [QwenCodeCLIAgent] Successfully processed content: title='Machine Learning'\n</code></pre>"},{"location":"agents/qwen-cli-debug-trace/#_6","title":"\u0423\u0440\u043e\u0432\u043d\u0438 \u043b\u043e\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f","text":""},{"location":"agents/qwen-cli-debug-trace/#debug","title":"DEBUG","text":"<p>\u041a\u043e\u0433\u0434\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c: \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430, \u043e\u0442\u043b\u0430\u0434\u043a\u0430, \u043f\u043e\u0438\u0441\u043a \u043f\u0440\u043e\u0431\u043b\u0435\u043c</p> <p>\u0427\u0442\u043e \u043b\u043e\u0433\u0438\u0440\u0443\u0435\u0442\u0441\u044f: - \u0412\u0441\u0435 \u0434\u0435\u0442\u0430\u043b\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f CLI - \u041f\u043e\u043b\u043d\u044b\u0435 \u0442\u0435\u043a\u0441\u0442\u044b \u043f\u0440\u043e\u043c\u043f\u0442\u043e\u0432 \u0438 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u0432 - \u0412\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0438\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 - \u0428\u0430\u0433\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438</p> <p>\u041f\u0440\u0438\u043c\u0435\u0440: <pre><code>setup_logging(log_level=\"DEBUG\", enable_debug_trace=True)\n</code></pre></p>"},{"location":"agents/qwen-cli-debug-trace/#info","title":"INFO","text":"<p>\u041a\u043e\u0433\u0434\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c: Production, \u043d\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430</p> <p>\u0427\u0442\u043e \u043b\u043e\u0433\u0438\u0440\u0443\u0435\u0442\u0441\u044f: - \u041e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u0441\u043e\u0431\u044b\u0442\u0438\u044f (\u043d\u0430\u0447\u0430\u043b\u043e/\u043a\u043e\u043d\u0435\u0446 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438) - \u0412\u0430\u0436\u043d\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f (\u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438, \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0438) - \u0423\u0441\u043f\u0435\u0448\u043d\u044b\u0435 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438</p> <p>\u041f\u0440\u0438\u043c\u0435\u0440: <pre><code>setup_logging(log_level=\"INFO\")\n</code></pre></p>"},{"location":"agents/qwen-cli-debug-trace/#warning","title":"WARNING","text":"<p>\u041a\u043e\u0433\u0434\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c: Production \u0441 \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u043c \u043b\u043e\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\u043c</p> <p>\u0427\u0442\u043e \u043b\u043e\u0433\u0438\u0440\u0443\u0435\u0442\u0441\u044f: - \u041f\u0440\u0435\u0434\u0443\u043f\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u044f (\u043f\u0443\u0441\u0442\u044b\u0435 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b, fallback) - \u041f\u043e\u0442\u0435\u043d\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u044b</p> <p>\u041f\u0440\u0438\u043c\u0435\u0440: <pre><code>setup_logging(log_level=\"WARNING\")\n</code></pre></p>"},{"location":"agents/qwen-cli-debug-trace/#error","title":"ERROR","text":"<p>\u041a\u043e\u0433\u0434\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c: \u041c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u043b\u043e\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435</p> <p>\u0427\u0442\u043e \u043b\u043e\u0433\u0438\u0440\u0443\u0435\u0442\u0441\u044f: - \u0422\u043e\u043b\u044c\u043a\u043e \u043a\u0440\u0438\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u043e\u0448\u0438\u0431\u043a\u0438</p> <p>\u041f\u0440\u0438\u043c\u0435\u0440: <pre><code>setup_logging(log_level=\"ERROR\")\n</code></pre></p>"},{"location":"agents/qwen-cli-debug-trace/#_7","title":"\u041f\u0440\u0438\u043c\u0435\u0440\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f","text":""},{"location":"agents/qwen-cli-debug-trace/#1-cli","title":"\u041f\u0440\u0438\u043c\u0435\u0440 1: \u041e\u0442\u043b\u0430\u0434\u043a\u0430 \u043f\u0440\u043e\u0431\u043b\u0435\u043c \u0441 CLI","text":"<pre><code>import asyncio\nfrom pathlib import Path\nfrom config.logging_config import setup_logging\nfrom src.agents.qwen_code_cli_agent import QwenCodeCLIAgent\n\nasync def debug_cli_issue():\n    # \u0412\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e \u0434\u0435\u0442\u0430\u043b\u044c\u043d\u043e\u0435 \u043b\u043e\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\n    setup_logging(\n        log_level=\"DEBUG\",\n        log_file=Path(\"logs/debug.log\"),\n        enable_debug_trace=True\n    )\n\n    agent = QwenCodeCLIAgent(timeout=60)\n\n    try:\n        result = await agent.process({\n            \"text\": \"Test content\",\n            \"urls\": []\n        })\n        print(f\"Success: {result['title']}\")\n    except Exception as e:\n        print(f\"Error: {e}\")\n        print(\"Check logs/debug.log and logs/debug_debug.log for details\")\n\nasyncio.run(debug_cli_issue())\n</code></pre>"},{"location":"agents/qwen-cli-debug-trace/#2-production","title":"\u041f\u0440\u0438\u043c\u0435\u0440 2: \u041c\u043e\u043d\u0438\u0442\u043e\u0440\u0438\u043d\u0433 \u0432 Production","text":"<pre><code>import asyncio\nfrom pathlib import Path\nfrom config.logging_config import setup_logging\nfrom src.agents.qwen_code_cli_agent import QwenCodeCLIAgent\n\nasync def production_monitoring():\n    # \u0423\u043c\u0435\u0440\u0435\u043d\u043d\u043e\u0435 \u043b\u043e\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0434\u043b\u044f production\n    setup_logging(\n        log_level=\"INFO\",\n        log_file=Path(\"logs/production.log\"),\n        enable_debug_trace=False\n    )\n\n    agent = QwenCodeCLIAgent()\n    result = await agent.process(content)\n\n    # \u0412 \u043b\u043e\u0433\u0430\u0445 \u0431\u0443\u0434\u0435\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u0432\u0430\u0436\u043d\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f:\n    # - \u041d\u0430\u0447\u0430\u043b\u043e/\u043a\u043e\u043d\u0435\u0446 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438\n    # - \u0417\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a \u0438 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u044f\n    # - \u041e\u0448\u0438\u0431\u043a\u0438 (\u0435\u0441\u043b\u0438 \u0435\u0441\u0442\u044c)\n\nasyncio.run(production_monitoring())\n</code></pre>"},{"location":"agents/qwen-cli-debug-trace/#3_1","title":"\u041f\u0440\u0438\u043c\u0435\u0440 3: \u0410\u043d\u0430\u043b\u0438\u0437 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438","text":"<pre><code>import asyncio\nimport time\nfrom pathlib import Path\nfrom config.logging_config import setup_logging\nfrom src.agents.qwen_code_cli_agent import QwenCodeCLIAgent\n\nasync def performance_analysis():\n    # DEBUG \u0434\u043b\u044f \u0430\u043d\u0430\u043b\u0438\u0437\u0430 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f\n    setup_logging(\n        log_level=\"DEBUG\",\n        log_file=Path(\"logs/performance.log\"),\n        enable_debug_trace=True\n    )\n\n    agent = QwenCodeCLIAgent()\n\n    start = time.time()\n    result = await agent.process(content)\n    end = time.time()\n\n    print(f\"Total time: {end - start:.2f}s\")\n    # \u0412 \u043b\u043e\u0433\u0430\u0445 \u0431\u0443\u0434\u0435\u0442 \u0434\u0435\u0442\u0430\u043b\u044c\u043d\u043e\u0435 \u0432\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0448\u0430\u0433\u0430\n\nasyncio.run(performance_analysis())\n</code></pre>"},{"location":"agents/qwen-cli-debug-trace/#_8","title":"\u0427\u0442\u0435\u043d\u0438\u0435 \u043b\u043e\u0433\u043e\u0432","text":""},{"location":"agents/qwen-cli-debug-trace/#-","title":"\u0421\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430 \u043b\u043e\u0433-\u0444\u0430\u0439\u043b\u043e\u0432","text":"<p>\u041f\u0440\u0438 <code>enable_debug_trace=True</code> \u0441\u043e\u0437\u0434\u0430\u044e\u0442\u0441\u044f \u0434\u0432\u0430 \u0444\u0430\u0439\u043b\u0430:</p> <ol> <li>\u041e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 \u043b\u043e\u0433 (<code>logs/qwen_debug.log</code>):</li> <li>\u0412\u0441\u0435 \u0443\u0440\u043e\u0432\u043d\u0438 (DEBUG, INFO, WARNING, ERROR)</li> <li>\u0420\u043e\u0442\u0430\u0446\u0438\u044f: 10 MB</li> <li>\u0425\u0440\u0430\u043d\u0435\u043d\u0438\u0435: 7 \u0434\u043d\u0435\u0439</li> <li> <p>\u0421\u0436\u0430\u0442\u0438\u0435: ZIP</p> </li> <li> <p>Debug-only \u043b\u043e\u0433 (<code>logs/qwen_debug_debug.log</code>):</p> </li> <li>\u0422\u043e\u043b\u044c\u043a\u043e DEBUG \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f</li> <li>\u0420\u043e\u0442\u0430\u0446\u0438\u044f: 50 MB</li> <li>\u0425\u0440\u0430\u043d\u0435\u043d\u0438\u0435: 3 \u0434\u043d\u044f</li> <li>\u0421\u0436\u0430\u0442\u0438\u0435: ZIP</li> </ol>"},{"location":"agents/qwen-cli-debug-trace/#_9","title":"\u0424\u043e\u0440\u043c\u0430\u0442 \u0437\u0430\u043f\u0438\u0441\u0435\u0439","text":"<pre><code>2024-10-03 15:30:45.123 | DEBUG    | qwen_code_cli_agent:_execute_qwen_cli:270 | [QwenCodeCLIAgent._execute_qwen_cli] Executing qwen-code CLI...\n\u2502                         \u2502           \u2502                      \u2502                    \u2502\n\u2502                         \u2502           \u2502                      \u2502                    \u2514\u2500 \u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435\n\u2502                         \u2502           \u2502                      \u2514\u2500 \u041d\u043e\u043c\u0435\u0440 \u0441\u0442\u0440\u043e\u043a\u0438\n\u2502                         \u2502           \u2514\u2500 \u0424\u0443\u043d\u043a\u0446\u0438\u044f\n\u2502                         \u2514\u2500 \u0423\u0440\u043e\u0432\u0435\u043d\u044c\n\u2514\u2500 \u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u043c\u0435\u0442\u043a\u0430\n</code></pre>"},{"location":"agents/qwen-cli-debug-trace/#_10","title":"\u041f\u043e\u0438\u0441\u043a \u0432 \u043b\u043e\u0433\u0430\u0445","text":"<pre><code># \u041d\u0430\u0439\u0442\u0438 \u0432\u0441\u0435 CLI \u0432\u044b\u0437\u043e\u0432\u044b\ngrep \"CLI EXECUTION TRACE\" logs/qwen_debug.log\n\n# \u041d\u0430\u0439\u0442\u0438 \u043e\u0448\u0438\u0431\u043a\u0438\ngrep \"ERROR\" logs/qwen_debug.log\n\n# \u041d\u0430\u0439\u0442\u0438 \u0432\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f\ngrep \"Process completed in\" logs/qwen_debug.log\n\n# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u0440\u043e\u043c\u043f\u0442\u044b\ngrep -A 20 \"FULL PROMPT\" logs/qwen_debug_debug.log\n\n# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b\ngrep -A 50 \"FULL STDOUT\" logs/qwen_debug_debug.log\n</code></pre>"},{"location":"agents/qwen-cli-debug-trace/#_11","title":"\u0411\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u044c","text":""},{"location":"agents/qwen-cli-debug-trace/#_12","title":"\u041c\u0430\u0441\u043a\u0438\u0440\u043e\u0432\u043a\u0430 \u0447\u0443\u0432\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445","text":"<p>API \u043a\u043b\u044e\u0447\u0438 \u0438 \u0442\u043e\u043a\u0435\u043d\u044b \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u043c\u0430\u0441\u043a\u0438\u0440\u0443\u044e\u0442\u0441\u044f \u0432 \u043b\u043e\u0433\u0430\u0445:</p> <pre><code># \u0412 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f:\nOPENAI_API_KEY=sk-1234567890abcdef1234567890abcdef\n\n# \u0412 \u043b\u043e\u0433\u0430\u0445 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442\u0441\u044f \u043a\u0430\u043a:\nOPENAI_API_KEY=sk-12345...\n</code></pre>"},{"location":"agents/qwen-cli-debug-trace/#_13","title":"\u0417\u0430\u0449\u0438\u0449\u0435\u043d\u043d\u044b\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435","text":"<p>\u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u043c\u0430\u0441\u043a\u0438\u0440\u0443\u044e\u0442\u0441\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0435: - <code>KEY</code> - <code>TOKEN</code> - <code>SECRET</code> - <code>PASSWORD</code></p>"},{"location":"agents/qwen-cli-debug-trace/#_14","title":"\u041f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c","text":""},{"location":"agents/qwen-cli-debug-trace/#_15","title":"\u0412\u043b\u0438\u044f\u043d\u0438\u0435 \u043d\u0430 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c","text":"\u0423\u0440\u043e\u0432\u0435\u043d\u044c Overhead \u0420\u0430\u0437\u043c\u0435\u0440 \u043b\u043e\u0433\u043e\u0432 \u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0430\u0446\u0438\u044f DEBUG ~5-10% \u0411\u043e\u043b\u044c\u0448\u043e\u0439 Development INFO ~1-2% \u0421\u0440\u0435\u0434\u043d\u0438\u0439 Production WARNING &lt;1% \u041c\u0430\u043b\u044b\u0439 Production ERROR &lt;0.5% \u041c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439 Production"},{"location":"agents/qwen-cli-debug-trace/#_16","title":"\u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0430\u0446\u0438\u0438","text":"<ol> <li>Development/Testing:</li> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 <code>DEBUG</code> \u0434\u043b\u044f \u043e\u0442\u043b\u0430\u0434\u043a\u0438</li> <li> <p><code>enable_debug_trace=True</code></p> </li> <li> <p>Staging:</p> </li> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 <code>INFO</code> \u0438\u043b\u0438 <code>DEBUG</code> \u043f\u043e \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u0438</li> <li> <p><code>enable_debug_trace=False</code> (\u0435\u0441\u043b\u0438 \u043d\u0435 \u043d\u0443\u0436\u0435\u043d \u0434\u0435\u0442\u0430\u043b\u044c\u043d\u044b\u0439 \u0442\u0440\u0435\u0439\u0441)</p> </li> <li> <p>Production:</p> </li> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 <code>INFO</code> \u0438\u043b\u0438 <code>WARNING</code></li> <li><code>enable_debug_trace=False</code></li> <li>\u0412\u043a\u043b\u044e\u0447\u0430\u0439\u0442\u0435 <code>DEBUG</code> \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u0440\u0438 \u0440\u0430\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u0438 \u043f\u0440\u043e\u0431\u043b\u0435\u043c</li> </ol>"},{"location":"agents/qwen-cli-debug-trace/#troubleshooting","title":"Troubleshooting","text":""},{"location":"agents/qwen-cli-debug-trace/#_17","title":"\u041f\u0440\u043e\u0431\u043b\u0435\u043c\u0430: \u041b\u043e\u0433\u0438 \u043d\u0435 \u0441\u043e\u0437\u0434\u0430\u044e\u0442\u0441\u044f","text":"<p>\u0420\u0435\u0448\u0435\u043d\u0438\u0435: <pre><code># \u041f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435, \u0447\u0442\u043e \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044f \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442\nfrom pathlib import Path\nlog_dir = Path(\"logs\")\nlog_dir.mkdir(parents=True, exist_ok=True)\n\n# \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u0442\u0435 \u043b\u043e\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\nsetup_logging(log_level=\"DEBUG\", log_file=log_dir / \"debug.log\")\n</code></pre></p>"},{"location":"agents/qwen-cli-debug-trace/#_18","title":"\u041f\u0440\u043e\u0431\u043b\u0435\u043c\u0430: \u0421\u043b\u0438\u0448\u043a\u043e\u043c \u043c\u043d\u043e\u0433\u043e \u043b\u043e\u0433\u043e\u0432","text":"<p>\u0420\u0435\u0448\u0435\u043d\u0438\u0435: <pre><code># \u0423\u043c\u0435\u043d\u044c\u0448\u0438\u0442\u0435 \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u043b\u043e\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\nsetup_logging(log_level=\"INFO\")  # \u0412\u043c\u0435\u0441\u0442\u043e DEBUG\n\n# \u0418\u043b\u0438 \u043e\u0442\u043a\u043b\u044e\u0447\u0438\u0442\u0435 debug \u0442\u0440\u0435\u0439\u0441\u0438\u043d\u0433\nsetup_logging(log_level=\"DEBUG\", enable_debug_trace=False)\n</code></pre></p>"},{"location":"agents/qwen-cli-debug-trace/#cli_1","title":"\u041f\u0440\u043e\u0431\u043b\u0435\u043c\u0430: \u041d\u0435 \u0432\u0438\u0436\u0443 \u0434\u0435\u0442\u0430\u043b\u044c\u043d\u044b\u0439 \u0442\u0440\u0435\u0439\u0441 CLI","text":"<p>\u0420\u0435\u0448\u0435\u043d\u0438\u0435: <pre><code># \u0423\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e DEBUG \u0432\u043a\u043b\u044e\u0447\u0435\u043d\nsetup_logging(\n    log_level=\"DEBUG\",  # \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e DEBUG\n    enable_debug_trace=True  # \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e True\n)\n</code></pre></p>"},{"location":"agents/qwen-cli-debug-trace/#_19","title":"\u041f\u0440\u043e\u0431\u043b\u0435\u043c\u0430: \u041b\u043e\u0433\u0438 \u0437\u0430\u043d\u0438\u043c\u0430\u044e\u0442 \u043c\u043d\u043e\u0433\u043e \u043c\u0435\u0441\u0442\u0430","text":"<p>\u0420\u0435\u0448\u0435\u043d\u0438\u0435: <pre><code># \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u0442\u0435 \u0440\u043e\u0442\u0430\u0446\u0438\u044e \u0438 \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0435\nfrom loguru import logger\n\nlogger.add(\n    \"logs/app.log\",\n    rotation=\"5 MB\",    # \u0420\u043e\u0442\u0430\u0446\u0438\u044f \u043f\u0440\u0438 5 MB (\u0432\u043c\u0435\u0441\u0442\u043e 50 MB)\n    retention=\"2 days\", # \u0425\u0440\u0430\u043d\u0438\u0442\u044c 2 \u0434\u043d\u044f (\u0432\u043c\u0435\u0441\u0442\u043e 7)\n    compression=\"zip\"   # \u0421\u0436\u0430\u0442\u0438\u0435\n)\n</code></pre></p>"},{"location":"agents/qwen-cli-debug-trace/#_20","title":"\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0440\u0435\u0441\u0443\u0440\u0441\u044b","text":"<ul> <li>\u041f\u0440\u0438\u043c\u0435\u0440 \u043a\u043e\u0434\u0430</li> <li>\u041a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u044f \u043b\u043e\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f</li> <li>QwenCodeCLIAgent \u0438\u0441\u0445\u043e\u0434\u043d\u044b\u0439 \u043a\u043e\u0434</li> <li>\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f Loguru</li> </ul>"},{"location":"agents/qwen-code-cli/","title":"Qwen Code CLI Agent","text":"<p>Complete guide to using the Qwen Code CLI agent.</p>"},{"location":"agents/qwen-code-cli/#overview","title":"Overview","text":"<p>The Qwen Code CLI agent is the most powerful option, using the official qwen-code CLI tool for advanced AI processing.</p>"},{"location":"agents/qwen-code-cli/#features","title":"Features","text":"<ul> <li>\u2705 Full integration with Qwen3-Coder models</li> <li>\u2705 Automatic TODO planning</li> <li>\u2705 Built-in tools: web search, git, github, shell</li> <li>\u2705 Free tier: 2000 requests/day</li> <li>\u2705 Vision model support</li> <li>\u2705 DEBUG \u0442\u0440\u0435\u0439\u0441\u0438\u043d\u0433 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f CLI - \u041f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0435 \u2192</li> </ul>"},{"location":"agents/qwen-code-cli/#installation","title":"Installation","text":""},{"location":"agents/qwen-code-cli/#1-install-nodejs-20","title":"1. Install Node.js 20+","text":"<pre><code># Ubuntu/Debian\ncurl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -\nsudo apt-get install -y nodejs\n\n# macOS\nbrew install node@20\n\n# Windows\n# Download from nodejs.org\n</code></pre>"},{"location":"agents/qwen-code-cli/#2-install-qwen-code-cli","title":"2. Install Qwen Code CLI","text":"<pre><code>npm install -g @qwen-code/qwen-code@latest\n</code></pre>"},{"location":"agents/qwen-code-cli/#3-verify-installation","title":"3. Verify Installation","text":"<pre><code>qwen --version\n</code></pre>"},{"location":"agents/qwen-code-cli/#4-authenticate","title":"4. Authenticate","text":"<pre><code>qwen\n</code></pre> <p>Follow the prompts to authenticate via qwen.ai.</p>"},{"location":"agents/qwen-code-cli/#configuration","title":"Configuration","text":"<p>Update <code>config.yaml</code>:</p> <pre><code>AGENT_TYPE: \"qwen_code_cli\"\nAGENT_QWEN_CLI_PATH: \"qwen\"\nAGENT_TIMEOUT: 300\nAGENT_ENABLE_WEB_SEARCH: true\nAGENT_ENABLE_GIT: true\nAGENT_ENABLE_GITHUB: true\nAGENT_ENABLE_SHELL: false\n</code></pre> <p>Tip: The CLI path is configurable via <code>AGENT_QWEN_CLI_PATH</code> and defaults to <code>qwen</code>. Ensure <code>qwen --version</code> succeeds on your system before enabling this agent.</p>"},{"location":"agents/qwen-code-cli/#how-it-works","title":"How It Works","text":"<ol> <li>Message received</li> <li>Agent prepares prompt</li> <li>Calls <code>qwen</code> CLI</li> <li>Qwen creates TODO plan</li> <li>Executes plan with tools</li> <li>Returns structured markdown</li> <li>Saved to KB</li> </ol>"},{"location":"agents/qwen-code-cli/#see-also","title":"See Also","text":"<ul> <li>Agent Overview</li> <li>Qwen Code Agent</li> </ul>"},{"location":"agents/qwen-code/","title":"Qwen Code Agent","text":"<p>Pure Python agent with custom tools.</p>"},{"location":"agents/qwen-code/#overview","title":"Overview","text":"<p>Python-native agent implementation with customizable tool integration.</p>"},{"location":"agents/qwen-code/#features","title":"Features","text":"<ul> <li>\u2705 Python-only implementation</li> <li>\u2705 Flexible tool configuration</li> <li>\u2705 Custom TODO planning</li> <li>\u2705 Web search, Git, GitHub support</li> </ul>"},{"location":"agents/qwen-code/#configuration","title":"Configuration","text":"<pre><code>AGENT_TYPE: \"qwen_code\"\nAGENT_MODEL: \"qwen-max\"\n</code></pre> <p>Note: <code>qwen_code</code> agent type is routed by <code>AgentFactory</code> to the Python autonomous agent (<code>src/agents/autonomous_agent.py</code>). If <code>OPENAI_API_KEY</code> (and optional <code>OPENAI_BASE_URL</code>) are set, it will use an OpenAI-compatible connector; otherwise it operates in a lightweight rule-based mode.</p>"},{"location":"agents/qwen-code/#see-also","title":"See Also","text":"<ul> <li>Agent Overview</li> <li>Qwen Code CLI</li> </ul>"},{"location":"agents/stub-agent/","title":"Stub Agent","text":"<p>Simple testing agent for development.</p>"},{"location":"agents/stub-agent/#overview","title":"Overview","text":"<p>Basic agent for testing without AI processing.</p>"},{"location":"agents/stub-agent/#features","title":"Features","text":"<ul> <li>\u2705 Fast - No API calls</li> <li>\u2705 Simple - Basic categorization</li> <li>\u2705 No dependencies</li> </ul>"},{"location":"agents/stub-agent/#configuration","title":"Configuration","text":"<pre><code>AGENT_TYPE: \"stub\"\n</code></pre>"},{"location":"agents/stub-agent/#see-also","title":"See Also","text":"<ul> <li>Agent Overview</li> </ul>"},{"location":"architecture/agent-architecture/","title":"Coming Soon","text":"<p>This documentation page is under construction.</p> <p>For now, please refer to the README or check back later.</p>"},{"location":"architecture/data-flow/","title":"Coming Soon","text":"<p>This documentation page is under construction.</p> <p>For now, please refer to the README or check back later.</p>"},{"location":"architecture/overview/","title":"Coming Soon","text":"<p>This documentation page is under construction.</p> <p>For now, please refer to the README or check back later.</p>"},{"location":"architecture/settings-architecture/","title":"Coming Soon","text":"<p>This documentation page is under construction.</p> <p>For now, please refer to the README or check back later.</p>"},{"location":"deployment/cicd/","title":"Coming Soon","text":"<p>This documentation page is under construction.</p> <p>For now, please refer to the README or check back later.</p>"},{"location":"deployment/docker/","title":"Coming Soon","text":"<p>This documentation page is under construction.</p> <p>For now, please refer to the README or check back later.</p>"},{"location":"deployment/overview/","title":"Coming Soon","text":"<p>This documentation page is under construction.</p> <p>For now, please refer to the README or check back later.</p>"},{"location":"deployment/production/","title":"Coming Soon","text":"<p>This documentation page is under construction.</p> <p>For now, please refer to the README or check back later.</p>"},{"location":"development/code-quality/","title":"Coming Soon","text":"<p>This documentation page is under construction.</p> <p>For now, please refer to the README or check back later.</p>"},{"location":"development/contributing/","title":"Coming Soon","text":"<p>This documentation page is under construction.</p> <p>For now, please refer to the README or check back later.</p>"},{"location":"development/overview/","title":"Coming Soon","text":"<p>This documentation page is under construction.</p> <p>For now, please refer to the README or check back later.</p>"},{"location":"development/project-structure/","title":"Coming Soon","text":"<p>This documentation page is under construction.</p> <p>For now, please refer to the README or check back later.</p>"},{"location":"development/testing/","title":"Coming Soon","text":"<p>This documentation page is under construction.</p> <p>For now, please refer to the README or check back later.</p>"},{"location":"getting-started/configuration/","title":"Configuration Guide","text":"<p>Complete guide to configuring tg-note.</p>"},{"location":"getting-started/configuration/#configuration-sources","title":"Configuration Sources","text":"<p>tg-note supports multiple configuration sources with the following priority (highest to lowest):</p> <ol> <li>Environment Variables - Highest priority</li> <li><code>.env</code> file - For credentials and overrides</li> <li><code>config.yaml</code> - Base configuration</li> <li>Default values - Built-in defaults</li> </ol> <p>Best Practice</p> <ul> <li>Store sensitive data (tokens, API keys) in <code>.env</code></li> <li>Store general settings in <code>config.yaml</code></li> <li>Use environment variables for deployment overrides</li> </ul>"},{"location":"getting-started/configuration/#configuration-files","title":"Configuration Files","text":""},{"location":"getting-started/configuration/#configyaml","title":"config.yaml","text":"<p>Main configuration file for non-sensitive settings.</p> <pre><code># Knowledge Base Settings\nKB_PATH: ./knowledge_base\nKB_GIT_ENABLED: true\nKB_GIT_AUTO_PUSH: true\nKB_GIT_REMOTE: origin\nKB_GIT_BRANCH: main\n\n# Agent Configuration\nAGENT_TYPE: \"qwen_code_cli\"  # stub, qwen_code, qwen_code_cli\nAGENT_MODEL: \"qwen-max\"\nAGENT_TIMEOUT: 300\nAGENT_ENABLE_WEB_SEARCH: true\nAGENT_ENABLE_GIT: true\nAGENT_ENABLE_GITHUB: true\nAGENT_ENABLE_SHELL: false\n\n# Processing Settings\nMESSAGE_GROUP_TIMEOUT: 30\nPROCESSED_LOG_PATH: ./data/processed.json\n\n# Logging Settings\nLOG_LEVEL: INFO  # DEBUG, INFO, WARNING, ERROR, CRITICAL\nLOG_FILE: ./logs/bot.log\n\n# Security\nALLOWED_USER_IDS: \"\"  # Comma-separated, empty = all allowed\n</code></pre>"},{"location":"getting-started/configuration/#env-file","title":".env File","text":"<p>Credentials and sensitive data (never commit to git!).</p> <pre><code># Required\nTELEGRAM_BOT_TOKEN=your_bot_token_here\n\n# Optional API Keys\nOPENAI_API_KEY=sk-...\nOPENAI_BASE_URL=https://api.openai.com/v1  # Optional, for custom endpoints\nANTHROPIC_API_KEY=sk-ant-...\nQWEN_API_KEY=your_qwen_key\n\n# GitHub Integration\nGITHUB_TOKEN=ghp_...\n</code></pre>"},{"location":"getting-started/configuration/#configuration-options","title":"Configuration Options","text":""},{"location":"getting-started/configuration/#knowledge-base-settings","title":"Knowledge Base Settings","text":""},{"location":"getting-started/configuration/#kb_path","title":"KB_PATH","text":"<ul> <li>Type: Path</li> <li>Default: <code>./knowledge_base</code></li> <li>Description: Path to your knowledge base directory</li> <li>Example: <code>/path/to/my-kb</code></li> </ul>"},{"location":"getting-started/configuration/#kb_git_enabled","title":"KB_GIT_ENABLED","text":"<ul> <li>Type: Boolean</li> <li>Default: <code>true</code></li> <li>Description: Enable Git operations</li> <li>Example: <code>true</code> or <code>false</code></li> </ul>"},{"location":"getting-started/configuration/#kb_git_auto_push","title":"KB_GIT_AUTO_PUSH","text":"<ul> <li>Type: Boolean</li> <li>Default: <code>true</code></li> <li>Description: Automatically push changes to remote</li> <li>Example: <code>true</code> or <code>false</code></li> </ul>"},{"location":"getting-started/configuration/#kb_git_remote","title":"KB_GIT_REMOTE","text":"<ul> <li>Type: String</li> <li>Default: <code>origin</code></li> <li>Description: Git remote name</li> <li>Example: <code>origin</code></li> </ul>"},{"location":"getting-started/configuration/#kb_git_branch","title":"KB_GIT_BRANCH","text":"<ul> <li>Type: String</li> <li>Default: <code>main</code></li> <li>Description: Git branch to use</li> <li>Example: <code>main</code> or <code>master</code></li> </ul>"},{"location":"getting-started/configuration/#agent-settings","title":"Agent Settings","text":""},{"location":"getting-started/configuration/#agent_type","title":"AGENT_TYPE","text":"<ul> <li>Type: String</li> <li>Default: <code>stub</code></li> <li>Options: <code>stub</code>, <code>qwen_code</code>, <code>qwen_code_cli</code></li> <li>Description: Agent implementation to use</li> <li>Recommendation: Use <code>qwen_code_cli</code> for production</li> </ul>"},{"location":"getting-started/configuration/#agent_model","title":"AGENT_MODEL","text":"<ul> <li>Type: String</li> <li>Default: <code>qwen-max</code></li> <li>Description: AI model to use</li> <li>Examples: <code>qwen-max</code>, <code>qwen-turbo</code>, <code>gpt-4</code></li> </ul>"},{"location":"getting-started/configuration/#agent_qwen_cli_path","title":"AGENT_QWEN_CLI_PATH","text":"<ul> <li>Type: String</li> <li>Default: <code>qwen</code></li> <li>Description: Path to qwen CLI executable</li> <li>Examples: <code>qwen</code>, <code>/usr/local/bin/qwen</code>, <code>./bin/qwen</code></li> </ul>"},{"location":"getting-started/configuration/#agent_instruction","title":"AGENT_INSTRUCTION","text":"<ul> <li>Type: String (Optional)</li> <li>Default: <code>None</code></li> <li>Description: Custom instruction for the agent</li> <li>Example: <code>\"Always be concise and use bullet points\"</code></li> </ul>"},{"location":"getting-started/configuration/#agent_timeout","title":"AGENT_TIMEOUT","text":"<ul> <li>Type: Integer (seconds)</li> <li>Default: <code>300</code></li> <li>Description: Maximum time for agent processing</li> <li>Example: <code>600</code> (10 minutes)</li> </ul>"},{"location":"getting-started/configuration/#agent_enable_web_search","title":"AGENT_ENABLE_WEB_SEARCH","text":"<ul> <li>Type: Boolean</li> <li>Default: <code>true</code></li> <li>Description: Allow web search capability</li> <li>Example: <code>true</code> or <code>false</code></li> </ul>"},{"location":"getting-started/configuration/#agent_enable_git","title":"AGENT_ENABLE_GIT","text":"<ul> <li>Type: Boolean</li> <li>Default: <code>true</code></li> <li>Description: Allow Git operations</li> <li>Example: <code>true</code> or <code>false</code></li> </ul>"},{"location":"getting-started/configuration/#agent_enable_github","title":"AGENT_ENABLE_GITHUB","text":"<ul> <li>Type: Boolean</li> <li>Default: <code>true</code></li> <li>Description: Allow GitHub API access</li> <li>Example: <code>true</code> or <code>false</code></li> </ul>"},{"location":"getting-started/configuration/#agent_enable_shell","title":"AGENT_ENABLE_SHELL","text":"<ul> <li>Type: Boolean</li> <li>Default: <code>false</code></li> <li>Description: Allow shell command execution</li> <li>Warning: \u26a0\ufe0f Security risk, use with caution</li> <li>Example: <code>false</code></li> </ul>"},{"location":"getting-started/configuration/#agent_enable_file_management","title":"AGENT_ENABLE_FILE_MANAGEMENT","text":"<ul> <li>Type: Boolean</li> <li>Default: <code>true</code></li> <li>Description: Enable file operations (create, edit, delete, move files)</li> <li>Example: <code>true</code> or <code>false</code></li> </ul>"},{"location":"getting-started/configuration/#agent_enable_folder_management","title":"AGENT_ENABLE_FOLDER_MANAGEMENT","text":"<ul> <li>Type: Boolean</li> <li>Default: <code>true</code></li> <li>Description: Enable folder operations (create, delete, move folders)</li> <li>Example: <code>true</code> or <code>false</code></li> </ul>"},{"location":"getting-started/configuration/#processing-settings","title":"Processing Settings","text":""},{"location":"getting-started/configuration/#message_group_timeout","title":"MESSAGE_GROUP_TIMEOUT","text":"<ul> <li>Type: Integer (seconds)</li> <li>Default: <code>30</code></li> <li>Description: Wait time before processing grouped messages</li> <li>Example: <code>60</code> (1 minute)</li> </ul>"},{"location":"getting-started/configuration/#processed_log_path","title":"PROCESSED_LOG_PATH","text":"<ul> <li>Type: Path</li> <li>Default: <code>./data/processed.json</code></li> <li>Description: Path to processing tracker database</li> <li>Example: <code>./data/tracker.json</code></li> </ul>"},{"location":"getting-started/configuration/#logging-settings","title":"Logging Settings","text":""},{"location":"getting-started/configuration/#log_level","title":"LOG_LEVEL","text":"<ul> <li>Type: String</li> <li>Default: <code>INFO</code></li> <li>Options: <code>DEBUG</code>, <code>INFO</code>, <code>WARNING</code>, <code>ERROR</code>, <code>CRITICAL</code></li> <li>Description: Logging verbosity level</li> <li>Example: <code>DEBUG</code> for development</li> </ul>"},{"location":"getting-started/configuration/#log_file","title":"LOG_FILE","text":"<ul> <li>Type: Path</li> <li>Default: <code>./logs/bot.log</code></li> <li>Description: Path to log file</li> <li>Example: <code>./logs/tg-note.log</code></li> </ul>"},{"location":"getting-started/configuration/#security-settings","title":"Security Settings","text":""},{"location":"getting-started/configuration/#telegram_bot_token","title":"TELEGRAM_BOT_TOKEN","text":"<ul> <li>Type: String (Secret)</li> <li>Required: Yes</li> <li>Source: <code>.env</code> or environment variable only</li> <li>Description: Telegram bot authentication token</li> <li>Example: <code>1234567890:ABCdefGHIjklMNOpqrsTUVwxyz</code></li> </ul>"},{"location":"getting-started/configuration/#allowed_user_ids","title":"ALLOWED_USER_IDS","text":"<ul> <li>Type: String (comma-separated)</li> <li>Default: <code>\"\"</code> (all users allowed)</li> <li>Description: Whitelist of allowed Telegram user IDs</li> <li>Example: <code>12345678,87654321</code></li> </ul>"},{"location":"getting-started/configuration/#openai_api_key","title":"OPENAI_API_KEY","text":"<ul> <li>Type: String (Secret)</li> <li>Required: No</li> <li>Source: <code>.env</code> or environment variable only</li> <li>Description: OpenAI API key for autonomous agent</li> <li>Example: <code>sk-...</code></li> </ul>"},{"location":"getting-started/configuration/#openai_base_url","title":"OPENAI_BASE_URL","text":"<ul> <li>Type: String (Secret)</li> <li>Required: No</li> <li>Source: <code>.env</code> or environment variable only</li> <li>Description: OpenAI API base URL for custom endpoints</li> <li>Example: <code>https://api.openai.com/v1</code></li> </ul>"},{"location":"getting-started/configuration/#qwen_api_key","title":"QWEN_API_KEY","text":"<ul> <li>Type: String (Secret)</li> <li>Required: No</li> <li>Source: <code>.env</code> or environment variable only</li> <li>Description: Qwen API key for qwen_code agent</li> <li>Example: <code>your_qwen_key</code></li> </ul>"},{"location":"getting-started/configuration/#anthropic_api_key","title":"ANTHROPIC_API_KEY","text":"<ul> <li>Type: String (Secret)</li> <li>Required: No</li> <li>Source: <code>.env</code> or environment variable only</li> <li>Description: Anthropic API key (future use)</li> <li>Example: <code>sk-ant-...</code></li> </ul>"},{"location":"getting-started/configuration/#github_token","title":"GITHUB_TOKEN","text":"<ul> <li>Type: String (Secret)</li> <li>Required: No</li> <li>Source: <code>.env</code> or environment variable only</li> <li>Description: GitHub personal access token for API operations</li> <li>Example: <code>ghp_...</code></li> </ul>"},{"location":"getting-started/configuration/#configuration-examples","title":"Configuration Examples","text":""},{"location":"getting-started/configuration/#development-setup","title":"Development Setup","text":"config.yaml<pre><code># Development configuration\nKB_PATH: ./dev-kb\nKB_GIT_ENABLED: true\nKB_GIT_AUTO_PUSH: false  # Manual push for dev\n\nAGENT_TYPE: \"stub\"  # Fast testing\nAGENT_TIMEOUT: 60\n\nMESSAGE_GROUP_TIMEOUT: 10  # Quick testing\n\nLOG_LEVEL: DEBUG\nLOG_FILE: ./logs/dev.log\n\nALLOWED_USER_IDS: \"your_user_id\"  # Only you\n</code></pre>"},{"location":"getting-started/configuration/#production-setup","title":"Production Setup","text":"config.yaml<pre><code># Production configuration\nKB_PATH: /var/kb/production\nKB_GIT_ENABLED: true\nKB_GIT_AUTO_PUSH: true\nKB_GIT_REMOTE: origin\nKB_GIT_BRANCH: main\n\nAGENT_TYPE: \"qwen_code_cli\"\nAGENT_MODEL: \"qwen-max\"\nAGENT_TIMEOUT: 300\nAGENT_ENABLE_WEB_SEARCH: true\nAGENT_ENABLE_GIT: true\nAGENT_ENABLE_GITHUB: true\nAGENT_ENABLE_SHELL: false\nAGENT_ENABLE_FILE_MANAGEMENT: true\nAGENT_ENABLE_FOLDER_MANAGEMENT: true\n\nMESSAGE_GROUP_TIMEOUT: 30\nPROCESSED_LOG_PATH: /var/data/processed.json\n\nLOG_LEVEL: INFO\nLOG_FILE: /var/log/tg-note/bot.log\n\nALLOWED_USER_IDS: \"\"  # Allow all authenticated users\n</code></pre>"},{"location":"getting-started/configuration/#testing-setup","title":"Testing Setup","text":"config.yaml<pre><code># Testing configuration\nKB_PATH: ./test-kb\nKB_GIT_ENABLED: false  # No git for tests\n\nAGENT_TYPE: \"stub\"\nAGENT_TIMEOUT: 30\n\nMESSAGE_GROUP_TIMEOUT: 5\n\nLOG_LEVEL: WARNING  # Reduce noise\nLOG_FILE: ./logs/test.log\n\nALLOWED_USER_IDS: \"123\"  # Test user only\n</code></pre>"},{"location":"getting-started/configuration/#environment-specific-configuration","title":"Environment-Specific Configuration","text":""},{"location":"getting-started/configuration/#using-environment-variables","title":"Using Environment Variables","text":"<p>Override any setting using environment variables:</p> <pre><code>export MESSAGE_GROUP_TIMEOUT=120\nexport LOG_LEVEL=DEBUG\nexport AGENT_TYPE=qwen_code_cli\n\npython main.py\n</code></pre>"},{"location":"getting-started/configuration/#docker-environment","title":"Docker Environment","text":"<pre><code>ENV TELEGRAM_BOT_TOKEN=your_token\nENV KB_PATH=/app/kb\nENV LOG_LEVEL=INFO\nENV AGENT_TYPE=qwen_code_cli\n</code></pre>"},{"location":"getting-started/configuration/#configuration-validation","title":"Configuration Validation","text":""},{"location":"getting-started/configuration/#check-current-configuration","title":"Check Current Configuration","text":"<pre><code>poetry run python -c \"from config import settings; print(settings)\"\n</code></pre>"},{"location":"getting-started/configuration/#validate-configuration","title":"Validate Configuration","text":"<pre><code>from config import settings\n\nerrors = settings.validate()\nif errors:\n    print(f\"Configuration errors: {errors}\")\nelse:\n    print(\"Configuration is valid!\")\n</code></pre>"},{"location":"getting-started/configuration/#troubleshooting","title":"Troubleshooting","text":""},{"location":"getting-started/configuration/#setting-not-applied","title":"Setting Not Applied","text":"<p>Check the priority order:</p> <ol> <li>Environment variable set? \u2192 Takes precedence</li> <li>Value in <code>.env</code>? \u2192 Overrides <code>config.yaml</code></li> <li>Value in <code>config.yaml</code>? \u2192 Uses this</li> <li>Falls back to default</li> </ol> <pre><code># Check environment variable\necho $MESSAGE_GROUP_TIMEOUT\n\n# Check .env file\ncat .env | grep MESSAGE_GROUP_TIMEOUT\n\n# Check config.yaml\ncat config.yaml | grep MESSAGE_GROUP_TIMEOUT\n</code></pre>"},{"location":"getting-started/configuration/#yaml-syntax-error","title":"YAML Syntax Error","text":"<p>Validate YAML syntax:</p> <pre><code>python -c \"import yaml; yaml.safe_load(open('config.yaml'))\"\n</code></pre>"},{"location":"getting-started/configuration/#permission-issues","title":"Permission Issues","text":"<p>Check file permissions:</p> <pre><code>ls -la config.yaml .env\nchmod 600 .env  # Secure credentials\nchmod 644 config.yaml\n</code></pre>"},{"location":"getting-started/configuration/#see-also","title":"See Also","text":"<ul> <li>Installation Guide</li> <li>Settings Management</li> <li>Agent Configuration</li> </ul>"},{"location":"getting-started/first-steps/","title":"First Steps","text":"<p>Your first steps with tg-note after installation.</p>"},{"location":"getting-started/first-steps/#1-get-your-telegram-bot-token","title":"1. Get Your Telegram Bot Token","text":""},{"location":"getting-started/first-steps/#create-a-bot-with-botfather","title":"Create a Bot with BotFather","text":"<ol> <li>Open Telegram and search for @BotFather</li> <li>Start a chat and send <code>/newbot</code></li> <li>Follow the prompts:</li> <li>Choose a name for your bot (e.g., \"My Knowledge Bot\")</li> <li>Choose a username (must end in \"bot\", e.g., \"my_knowledge_bot\")</li> <li>BotFather will give you a token - save it securely!</li> </ol> <p>Example token format: <pre><code>1234567890:ABCdefGHIjklMNOpqrsTUVwxyz12345678\n</code></pre></p>"},{"location":"getting-started/first-steps/#add-token-to-configuration","title":"Add Token to Configuration","text":"<p>Add your token to <code>.env</code>:</p> <pre><code>TELEGRAM_BOT_TOKEN=1234567890:ABCdefGHIjklMNOpqrsTUVwxyz12345678\n</code></pre>"},{"location":"getting-started/first-steps/#2-get-your-user-id-optional","title":"2. Get Your User ID (Optional)","text":"<p>If you want to restrict bot access to only yourself:</p> <ol> <li>Open Telegram and search for @userinfobot</li> <li>Start a chat and send any message</li> <li>Bot will reply with your user info</li> <li>Copy your User ID</li> </ol> <p>Add to <code>config.yaml</code>:</p> <pre><code>ALLOWED_USER_IDS: \"123456789\"  # Your user ID\n</code></pre>"},{"location":"getting-started/first-steps/#3-setup-knowledge-base","title":"3. Setup Knowledge Base","text":""},{"location":"getting-started/first-steps/#option-a-local-knowledge-base","title":"Option A: Local Knowledge Base","text":"<p>Create a new local Git repository:</p> <pre><code>mkdir my-knowledge-base\ncd my-knowledge-base\ngit init\ngit add .\ngit commit -m \"Initial commit\"\ncd ..\n</code></pre> <p>Update <code>config.yaml</code>:</p> <pre><code>KB_PATH: ./my-knowledge-base\nKB_GIT_ENABLED: true\nKB_GIT_AUTO_PUSH: false  # No remote yet\n</code></pre>"},{"location":"getting-started/first-steps/#option-b-github-knowledge-base","title":"Option B: GitHub Knowledge Base","text":"<ol> <li>Create a new repository on GitHub (e.g., <code>my-kb</code>)</li> <li>Clone it locally:</li> </ol> <pre><code>git clone https://github.com/yourusername/my-kb.git\n</code></pre> <ol> <li>Update <code>config.yaml</code>:</li> </ol> <pre><code>KB_PATH: ./my-kb\nKB_GIT_ENABLED: true\nKB_GIT_AUTO_PUSH: true\nKB_GIT_REMOTE: origin\nKB_GIT_BRANCH: main\n</code></pre>"},{"location":"getting-started/first-steps/#4-start-the-bot","title":"4. Start the Bot","text":"<pre><code>poetry run python main.py\n</code></pre> <p>Expected output:</p> <pre><code>INFO - Starting tg-note bot...\nINFO - Configuration validated successfully\nINFO - Processing tracker initialized\nINFO - Repository manager initialized\nINFO - Telegram bot started successfully\nINFO - Bot initialization completed\nINFO - Press Ctrl+C to stop\n</code></pre>"},{"location":"getting-started/first-steps/#5-initialize-bot-in-telegram","title":"5. Initialize Bot in Telegram","text":"<p>Open Telegram, find your bot, and send:</p> <pre><code>/start\n</code></pre> <p>Bot should reply with a welcome message!</p>"},{"location":"getting-started/first-steps/#6-configure-knowledge-base-in-telegram","title":"6. Configure Knowledge Base in Telegram","text":"<p>Tell the bot where to save notes:</p> <pre><code>/setkb my-notes\n</code></pre> <p>Or use a GitHub repo:</p> <pre><code>/setkb https://github.com/yourusername/my-kb\n</code></pre>"},{"location":"getting-started/first-steps/#7-send-your-first-message","title":"7. Send Your First Message","text":"<p>Send or forward any message to the bot. Examples:</p> <ul> <li>Plain text message</li> <li>Forwarded message from a channel</li> <li>Article link</li> <li>Multiple messages</li> </ul> <p>The bot will process and save it to your knowledge base!</p>"},{"location":"getting-started/first-steps/#8-check-your-knowledge-base","title":"8. Check Your Knowledge Base","text":"<p>Look in your KB directory:</p> <pre><code>ls -la my-knowledge-base/\n</code></pre> <p>You should see:</p> <pre><code>topics/\n\u251c\u2500\u2500 general/\n\u2502   \u2514\u2500\u2500 2025-10-03-your-first-note.md\n\u2514\u2500\u2500 index.md\n</code></pre>"},{"location":"getting-started/first-steps/#9-verify-git-commits","title":"9. Verify Git Commits","text":"<pre><code>cd my-knowledge-base\ngit log --oneline\n</code></pre> <p>You should see automatic commits!</p>"},{"location":"getting-started/first-steps/#10-explore-bot-commands","title":"10. Explore Bot Commands","text":"<p>Try these commands:</p> <pre><code>/help      # Show all commands\n/kb        # Show KB info\n/status    # Show statistics\n/settings  # Open settings menu\n</code></pre>"},{"location":"getting-started/first-steps/#next-steps","title":"Next Steps","text":"<ul> <li> <p> Learn All Commands</p> <p>Master all bot commands and features</p> <p> Bot Commands</p> </li> <li> <p> Upgrade Your Agent</p> <p>Install Qwen Code CLI for better AI processing</p> <p> Agent Setup</p> </li> <li> <p> Customize Settings</p> <p>Configure bot behavior via Telegram</p> <p> Settings Guide</p> </li> <li> <p> Organize Your KB</p> <p>Learn KB structure and organization</p> <p> KB Setup</p> </li> </ul>"},{"location":"getting-started/first-steps/#common-first-time-issues","title":"Common First-Time Issues","text":""},{"location":"getting-started/first-steps/#bot-not-responding","title":"Bot Not Responding","text":"<ol> <li>Check if bot is running in terminal</li> <li>Verify bot token in <code>.env</code></li> <li>Check logs: <code>tail -f logs/bot.log</code></li> </ol>"},{"location":"getting-started/first-steps/#not-authorized-error","title":"\"Not authorized\" Error","text":"<ul> <li>Wrong bot token</li> <li>Check <code>.env</code> file</li> <li>Restart the bot</li> </ul>"},{"location":"getting-started/first-steps/#kb-not-created","title":"KB Not Created","text":"<ul> <li>Check <code>KB_PATH</code> in config</li> <li>Ensure directory exists</li> <li>Check permissions</li> </ul>"},{"location":"getting-started/first-steps/#messages-not-saved","title":"Messages Not Saved","text":"<ul> <li>Check logs for errors</li> <li>Verify KB setup: <code>/kb</code></li> <li>Check Git status in KB folder</li> </ul>"},{"location":"getting-started/first-steps/#getting-help","title":"Getting Help","text":"<ul> <li>\ud83d\udcd6 Full Documentation</li> <li>\ud83d\udc1b Issue Tracker</li> <li>\ud83d\udcac Discussions</li> </ul>"},{"location":"getting-started/installation/","title":"Installation Guide","text":"<p>Detailed installation instructions for tg-note.</p>"},{"location":"getting-started/installation/#system-requirements","title":"System Requirements","text":""},{"location":"getting-started/installation/#required","title":"Required","text":"<ul> <li>Python 3.11 or higher</li> <li>Poetry - Python dependency manager</li> <li>Git - Version control system</li> <li>Telegram Account - To create and use the bot</li> </ul>"},{"location":"getting-started/installation/#optional","title":"Optional","text":"<ul> <li>Node.js 20+ - Required for <code>qwen_code_cli</code> agent (recommended)</li> <li>Docker - For containerized deployment</li> </ul>"},{"location":"getting-started/installation/#installation-methods","title":"Installation Methods","text":"Local InstallationDocker Installation <p>Coming Soon</p> <p>Docker support is planned for future releases.</p> <p>For now, please use the local installation method.</p>"},{"location":"getting-started/installation/#1-install-python-311","title":"1. Install Python 3.11+","text":"<p>Check your Python version:</p> <pre><code>python3 --version\n</code></pre> <p>If you need to install Python 3.11+:</p> Ubuntu/DebianmacOSWindows <pre><code>sudo apt update\nsudo apt install python3.11 python3.11-venv python3-pip\n</code></pre> <pre><code>brew install python@3.11\n</code></pre> <p>Download from python.org</p>"},{"location":"getting-started/installation/#2-install-poetry","title":"2. Install Poetry","text":"<pre><code>curl -sSL https://install.python-poetry.org | python3 -\n</code></pre> <p>Or using pipx:</p> <pre><code>pipx install poetry\n</code></pre> <p>Add Poetry to your PATH (if needed):</p> <pre><code>export PATH=\"$HOME/.local/bin:$PATH\"\n</code></pre>"},{"location":"getting-started/installation/#3-clone-the-repository","title":"3. Clone the Repository","text":"<pre><code>git clone https://github.com/ArtyomZemlyak/tg-note.git\ncd tg-note\n</code></pre>"},{"location":"getting-started/installation/#4-install-dependencies","title":"4. Install Dependencies","text":"<pre><code>poetry install\n</code></pre> <p>This creates a virtual environment and installs all required packages.</p>"},{"location":"getting-started/installation/#5-verify-installation","title":"5. Verify Installation","text":"<pre><code>poetry run python -c \"from config import settings; print('Installation successful!')\"\n</code></pre>"},{"location":"getting-started/installation/#optional-dependencies","title":"Optional Dependencies","text":""},{"location":"getting-started/installation/#qwen-code-cli-recommended-for-production","title":"Qwen Code CLI (Recommended for Production)","text":"<p>The Qwen Code CLI agent provides the best AI-powered processing capabilities.</p>"},{"location":"getting-started/installation/#1-install-nodejs-20","title":"1. Install Node.js 20+","text":"Ubuntu/DebianmacOSWindows <pre><code>curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -\nsudo apt-get install -y nodejs\n</code></pre> <pre><code>brew install node@20\n</code></pre> <p>Download from nodejs.org</p>"},{"location":"getting-started/installation/#2-install-qwen-code-cli","title":"2. Install Qwen Code CLI","text":"<pre><code>npm install -g @qwen-code/qwen-code@latest\n</code></pre>"},{"location":"getting-started/installation/#3-verify-installation","title":"3. Verify Installation","text":"<pre><code>qwen --version\n</code></pre>"},{"location":"getting-started/installation/#4-authenticate","title":"4. Authenticate","text":"<pre><code>qwen\n</code></pre> <p>Follow the interactive authentication process. You'll get:</p> <ul> <li>2000 free requests per day</li> <li>60 requests per minute</li> <li>No token limits</li> </ul> <p>Learn more about Qwen Code CLI \u2192</p>"},{"location":"getting-started/installation/#post-installation-setup","title":"Post-Installation Setup","text":""},{"location":"getting-started/installation/#1-create-configuration-files","title":"1. Create Configuration Files","text":"<pre><code># Copy example configuration\ncp config.example.yaml config.yaml\n</code></pre>"},{"location":"getting-started/installation/#2-setup-environment-variables","title":"2. Setup Environment Variables","text":"<p>Create a <code>.env</code> file:</p> <pre><code>touch .env\n</code></pre> <p>Add your credentials:</p> <pre><code># Required\nTELEGRAM_BOT_TOKEN=your_bot_token_here\n\n# Optional - For advanced features\nOPENAI_API_KEY=your_openai_key\nANTHROPIC_API_KEY=your_anthropic_key\n</code></pre> <p>Security</p> <p>Never commit your <code>.env</code> file to version control! It's already in <code>.gitignore</code>, but always double-check.</p>"},{"location":"getting-started/installation/#3-configure-basic-settings","title":"3. Configure Basic Settings","text":"<p>Edit <code>config.yaml</code>:</p> <pre><code># Knowledge Base\nKB_PATH: ./knowledge_base\nKB_GIT_ENABLED: true\nKB_GIT_AUTO_PUSH: true\n\n# Agent Type\nAGENT_TYPE: \"stub\"  # Change to \"qwen_code_cli\" if installed\n\n# Logging\nLOG_LEVEL: INFO\nLOG_FILE: ./logs/bot.log\n</code></pre> <p>Full configuration guide \u2192</p>"},{"location":"getting-started/installation/#verification","title":"Verification","text":""},{"location":"getting-started/installation/#run-tests","title":"Run Tests","text":"<p>Verify everything is working:</p> <pre><code># Run all tests\npoetry run pytest\n\n# Run with coverage\npoetry run pytest --cov=src --cov-report=html\n\n# Run specific test\npoetry run pytest tests/test_tracker.py -v\n</code></pre>"},{"location":"getting-started/installation/#check-configuration","title":"Check Configuration","text":"<pre><code>poetry run python -c \"from config import settings; print(settings)\"\n</code></pre>"},{"location":"getting-started/installation/#test-bot-connection","title":"Test Bot Connection","text":"<pre><code>poetry run python main.py\n</code></pre> <p>You should see:</p> <pre><code>INFO - Starting tg-note bot...\nINFO - Configuration validated successfully\nINFO - Bot initialization completed\n</code></pre>"},{"location":"getting-started/installation/#directory-structure","title":"Directory Structure","text":"<p>After installation, your directory should look like:</p> <pre><code>tg-note/\n\u251c\u2500\u2500 config/              # Configuration modules\n\u251c\u2500\u2500 src/\n\u2502   \u251c\u2500\u2500 bot/            # Telegram bot\n\u2502   \u251c\u2500\u2500 processor/      # Message processing\n\u2502   \u251c\u2500\u2500 agents/         # AI agents\n\u2502   \u251c\u2500\u2500 knowledge_base/ # KB management\n\u2502   \u2514\u2500\u2500 tracker/        # Processing tracker\n\u251c\u2500\u2500 tests/              # Unit tests\n\u251c\u2500\u2500 data/               # Created on first run\n\u251c\u2500\u2500 logs/               # Created on first run\n\u251c\u2500\u2500 config.yaml         # Your configuration\n\u251c\u2500\u2500 .env                # Your credentials\n\u251c\u2500\u2500 pyproject.toml      # Project metadata\n\u251c\u2500\u2500 poetry.lock         # Dependency lock file\n\u2514\u2500\u2500 main.py            # Entry point\n</code></pre>"},{"location":"getting-started/installation/#updating","title":"Updating","text":"<p>To update tg-note to the latest version:</p> <pre><code>git pull origin main\npoetry install\n</code></pre> <p>To update dependencies:</p> <pre><code>poetry update\n</code></pre>"},{"location":"getting-started/installation/#troubleshooting-installation","title":"Troubleshooting Installation","text":""},{"location":"getting-started/installation/#poetry-not-found","title":"Poetry Not Found","text":"<pre><code># Add to PATH\nexport PATH=\"$HOME/.local/bin:$PATH\"\n\n# Make permanent\necho 'export PATH=\"$HOME/.local/bin:$PATH\"' &gt;&gt; ~/.bashrc\nsource ~/.bashrc\n</code></pre>"},{"location":"getting-started/installation/#python-version-issues","title":"Python Version Issues","text":"<pre><code># Use specific Python version with Poetry\npoetry env use python3.11\n\n# Verify\npoetry run python --version\n</code></pre>"},{"location":"getting-started/installation/#permission-errors","title":"Permission Errors","text":"<pre><code># On Linux/macOS\nsudo chown -R $USER:$USER ~/.local\n\n# Or install without sudo\ncurl -sSL https://install.python-poetry.org | python3 - --user\n</code></pre>"},{"location":"getting-started/installation/#virtual-environment-issues","title":"Virtual Environment Issues","text":"<pre><code># Remove and recreate\npoetry env remove python\npoetry install\n</code></pre>"},{"location":"getting-started/installation/#next-steps","title":"Next Steps","text":"<p>After successful installation:</p> <ol> <li>Configure the bot</li> <li>Get your Telegram bot token</li> <li>Run the bot</li> <li>Choose your agent</li> </ol>"},{"location":"getting-started/installation/#uninstallation","title":"Uninstallation","text":"<p>To completely remove tg-note:</p> <pre><code># Remove virtual environment\npoetry env remove python\n\n# Remove project directory\ncd ..\nrm -rf tg-note\n\n# Optionally remove Poetry\npipx uninstall poetry\n</code></pre>"},{"location":"getting-started/quick-start/","title":"Quick Start Guide","text":"<p>Get up and running with tg-note in just a few minutes!</p>"},{"location":"getting-started/quick-start/#prerequisites","title":"Prerequisites","text":"<p>Before you begin, ensure you have:</p> <ul> <li>Python 3.11+ installed</li> <li>Poetry (Python dependency manager)</li> <li>Git installed</li> <li>Telegram Account</li> <li>Node.js 20+ (optional, for qwen_code_cli agent)</li> </ul>"},{"location":"getting-started/quick-start/#installation-steps","title":"Installation Steps","text":""},{"location":"getting-started/quick-start/#1-clone-the-repository","title":"1. Clone the Repository","text":"<pre><code>git clone https://github.com/ArtyomZemlyak/tg-note.git\ncd tg-note\n</code></pre>"},{"location":"getting-started/quick-start/#2-install-poetry","title":"2. Install Poetry","text":"<p>If you don't have Poetry installed:</p> <pre><code>curl -sSL https://install.python-poetry.org | python3 -\n# or using pipx:\n# pipx install poetry\n</code></pre>"},{"location":"getting-started/quick-start/#3-install-dependencies","title":"3. Install Dependencies","text":"<pre><code>poetry install\n</code></pre> <p>This will automatically create a virtual environment and install all dependencies.</p>"},{"location":"getting-started/quick-start/#configuration","title":"Configuration","text":""},{"location":"getting-started/quick-start/#1-create-configuration-files","title":"1. Create Configuration Files","text":"<pre><code># Copy example configuration\ncp config.example.yaml config.yaml\n</code></pre>"},{"location":"getting-started/quick-start/#2-get-telegram-bot-token","title":"2. Get Telegram Bot Token","text":"<ol> <li>Open @BotFather in Telegram</li> <li>Send <code>/newbot</code> and follow instructions</li> <li>Copy the token provided</li> </ol>"},{"location":"getting-started/quick-start/#3-create-env-file","title":"3. Create <code>.env</code> File","text":"<p>Create a <code>.env</code> file with your credentials:</p> <pre><code>cat &gt; .env &lt;&lt; EOF\n# Required: Telegram Bot Token\nTELEGRAM_BOT_TOKEN=your_bot_token_here\n\n# Optional: API keys for advanced agents\n# OPENAI_API_KEY=your_openai_key\n# ANTHROPIC_API_KEY=your_anthropic_key\nEOF\n</code></pre>"},{"location":"getting-started/quick-start/#4-configure-configyaml","title":"4. Configure <code>config.yaml</code>","text":"<p>Edit <code>config.yaml</code> with your basic settings:</p> <pre><code># Knowledge Base Settings\nKB_PATH: ./knowledge_base\nKB_GIT_ENABLED: true\nKB_GIT_AUTO_PUSH: true\nKB_GIT_REMOTE: origin\nKB_GIT_BRANCH: main\n\n# Agent Configuration\nAGENT_TYPE: \"stub\"  # Options: stub, qwen_code, qwen_code_cli\n\n# Processing Settings\nMESSAGE_GROUP_TIMEOUT: 30  # seconds\n\n# Logging\nLOG_LEVEL: INFO\nLOG_FILE: ./logs/bot.log\n\n# User Access Control (empty = all users allowed)\nALLOWED_USER_IDS: \"\"\n</code></pre>"},{"location":"getting-started/quick-start/#running-the-bot","title":"Running the Bot","text":""},{"location":"getting-started/quick-start/#start-the-bot","title":"Start the Bot","text":"<pre><code>poetry run python main.py\n# or activate the virtual environment first:\npoetry shell\npython main.py\n</code></pre> <p>You should see:</p> <pre><code>INFO - Starting tg-note bot...\nINFO - Configuration validated successfully\nINFO - Processing tracker initialized\nINFO - Repository manager initialized\nINFO - Telegram bot started successfully\nINFO - Bot initialization completed\nINFO - Press Ctrl+C to stop\n</code></pre>"},{"location":"getting-started/quick-start/#configure-knowledge-base-in-telegram","title":"Configure Knowledge Base in Telegram","text":"<p>Open your bot in Telegram and:</p> <pre><code>/start                    # Initialize the bot\n/setkb my-notes           # Create local knowledge base\n# or\n/setkb https://github.com/username/kb-repo  # Use GitHub repository\n</code></pre>"},{"location":"getting-started/quick-start/#start-sending-messages","title":"Start Sending Messages!","text":"<p>Just forward any message or write text - the bot will automatically process and save it to your knowledge base.</p>"},{"location":"getting-started/quick-start/#stop-the-bot","title":"Stop the Bot","text":"<p>Press <code>Ctrl+C</code> in the terminal.</p>"},{"location":"getting-started/quick-start/#optional-install-qwen-code-cli","title":"Optional: Install Qwen Code CLI","text":"<p>For advanced AI processing, install the Qwen Code CLI agent:</p> <pre><code># Install Node.js 20+ first, then:\nnpm install -g @qwen-code/qwen-code@latest\n\n# Authenticate (2000 free requests/day)\nqwen\n\n# Update config.yaml\nAGENT_TYPE: \"qwen_code_cli\"\n</code></pre> <p>Learn more about Qwen Code CLI \u2192</p>"},{"location":"getting-started/quick-start/#basic-commands","title":"Basic Commands","text":"Command Description Example <code>/start</code> Initialize bot interaction <code>/start</code> <code>/help</code> Display help information <code>/help</code> <code>/setkb &lt;name\\|url&gt;</code> Setup knowledge base <code>/setkb my-notes</code> <code>/kb</code> Show current KB info <code>/kb</code> <code>/status</code> Display processing statistics <code>/status</code> <code>/settings</code> Open interactive settings menu <code>/settings</code> <p>Full command reference \u2192</p>"},{"location":"getting-started/quick-start/#next-steps","title":"Next Steps","text":"<p>Now that you have tg-note running, explore these topics:</p> <ul> <li> <p> Configuration</p> <p>Learn about all configuration options</p> <p> Configuration Guide</p> </li> <li> <p> User Guide</p> <p>Learn how to use all bot features</p> <p> User Guide</p> </li> <li> <p> Agent System</p> <p>Understand AI agents and choose the right one</p> <p> Agent Overview</p> </li> <li> <p> Knowledge Base</p> <p>Setup and manage your knowledge base</p> <p> KB Setup</p> </li> </ul>"},{"location":"getting-started/quick-start/#troubleshooting","title":"Troubleshooting","text":""},{"location":"getting-started/quick-start/#common-issues","title":"Common Issues","text":"<p>TELEGRAM_BOT_TOKEN is required</p> <p>Add your bot token to the <code>.env</code> file</p> <p>Not a git repository</p> <p>Check <code>KB_PATH</code> in config.yaml - it should point to a git repository</p> <p>ModuleNotFoundError</p> <p>Activate the Poetry virtual environment: <code>poetry shell</code></p> <p>Tests not running</p> <p>Install dependencies: <code>poetry install</code></p> <p>Full troubleshooting guide \u2192</p>"},{"location":"getting-started/quick-start/#getting-help","title":"Getting Help","text":"<ul> <li>\ud83d\udcd6 Check the User Guide</li> <li>\ud83d\udc1b Report issues on GitHub</li> <li>\ud83d\udcac Ask questions in Discussions</li> </ul>"},{"location":"reference/api/","title":"Coming Soon","text":"<p>This documentation page is under construction.</p> <p>For now, please refer to the README or check back later.</p>"},{"location":"reference/configuration/","title":"Coming Soon","text":"<p>This documentation page is under construction.</p> <p>For now, please refer to the README or check back later.</p>"},{"location":"reference/faq/","title":"Coming Soon","text":"<p>This documentation page is under construction.</p> <p>For now, please refer to the README or check back later.</p>"},{"location":"reference/overview/","title":"Coming Soon","text":"<p>This documentation page is under construction.</p> <p>For now, please refer to the README or check back later.</p>"},{"location":"reference/troubleshooting/","title":"Coming Soon","text":"<p>This documentation page is under construction.</p> <p>For now, please refer to the README or check back later.</p>"},{"location":"user-guide/bot-commands/","title":"Bot Commands","text":"<p>Complete reference for all tg-note bot commands.</p>"},{"location":"user-guide/bot-commands/#working-modes","title":"Working Modes","text":"<p>The bot has two working modes that you can switch between:</p>"},{"location":"user-guide/bot-commands/#note-note-creation-mode-default","title":"/note - Note Creation Mode (Default)","text":"<p>Switches the bot to knowledge base creation mode.</p> <p>Usage: <pre><code>/note\n</code></pre></p> <p>Response: <pre><code>\ud83d\udcdd \u0420\u0435\u0436\u0438\u043c \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0431\u0430\u0437\u044b \u0437\u043d\u0430\u043d\u0438\u0439 \u0430\u043a\u0442\u0438\u0432\u0438\u0440\u043e\u0432\u0430\u043d!\n\n\u0422\u0435\u043f\u0435\u0440\u044c \u0432\u0430\u0448\u0438 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u0431\u0443\u0434\u0443\u0442 \u0430\u043d\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0442\u044c\u0441\u044f \u0432 \u0431\u0430\u0437\u0443 \u0437\u043d\u0430\u043d\u0438\u0439.\n\u041e\u0442\u043f\u0440\u0430\u0432\u044c\u0442\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435, \u0440\u0435\u043f\u043e\u0441\u0442 \u0438\u043b\u0438 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438.\n\n\u0414\u043b\u044f \u043f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u0432 \u0440\u0435\u0436\u0438\u043c \u0432\u043e\u043f\u0440\u043e\u0441\u043e\u0432 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 /ask\n</code></pre></p> <p>What it does: - Bot analyzes incoming messages - Creates structured notes in knowledge base - Automatically categorizes content - Saves to Git repository</p>"},{"location":"user-guide/bot-commands/#ask-question-mode","title":"/ask - Question Mode","text":"<p>Switches the bot to question mode for querying your knowledge base.</p> <p>Usage: <pre><code>/ask\n</code></pre></p> <p>Requirements: - Knowledge base must be set up via <code>/setkb</code></p> <p>Response: <pre><code>\ud83e\udd14 \u0420\u0435\u0436\u0438\u043c \u0432\u043e\u043f\u0440\u043e\u0441\u043e\u0432 \u043f\u043e \u0431\u0430\u0437\u0435 \u0437\u043d\u0430\u043d\u0438\u0439 \u0430\u043a\u0442\u0438\u0432\u0438\u0440\u043e\u0432\u0430\u043d!\n\n\u0422\u0435\u043f\u0435\u0440\u044c \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0437\u0430\u0434\u0430\u0432\u0430\u0442\u044c \u0432\u043e\u043f\u0440\u043e\u0441\u044b \u0430\u0433\u0435\u043d\u0442\u0443 \u043e \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u043c \u0432\u0430\u0448\u0435\u0439 \u0431\u0430\u0437\u044b \u0437\u043d\u0430\u043d\u0438\u0439.\n\u0410\u0433\u0435\u043d\u0442 \u0431\u0443\u0434\u0435\u0442 \u0438\u0441\u043a\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u0432 \u0431\u0430\u0437\u0435 \u0438 \u043e\u0442\u0432\u0435\u0447\u0430\u0442\u044c \u043d\u0430 \u0432\u0430\u0448\u0438 \u0432\u043e\u043f\u0440\u043e\u0441\u044b.\n\n\u0414\u043b\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0442\u0430 \u0432 \u0440\u0435\u0436\u0438\u043c \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043c\u0435\u0442\u043e\u043a \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 /note\n</code></pre></p> <p>What it does: - Accepts questions about knowledge base content - Agent searches for relevant information using KB reading tools - Provides answers based on found content - Shows sources of information</p> <p>Example interaction: <pre><code>User: /ask\nBot: \ud83e\udd14 \u0420\u0435\u0436\u0438\u043c \u0432\u043e\u043f\u0440\u043e\u0441\u043e\u0432 \u043f\u043e \u0431\u0430\u0437\u0435 \u0437\u043d\u0430\u043d\u0438\u0439 \u0430\u043a\u0442\u0438\u0432\u0438\u0440\u043e\u0432\u0430\u043d!\n\nUser: \u0427\u0442\u043e \u0442\u0430\u043a\u043e\u0435 GPT-4?\nBot: \ud83d\udd0d \u0418\u0449\u0443 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u0432 \u0431\u0430\u0437\u0435 \u0437\u043d\u0430\u043d\u0438\u0439...\n     \ud83d\udca1 \u041e\u0442\u0432\u0435\u0442:\n\n     GPT-4 - \u044d\u0442\u043e \u0431\u043e\u043b\u044c\u0448\u0430\u044f \u044f\u0437\u044b\u043a\u043e\u0432\u0430\u044f \u043c\u043e\u0434\u0435\u043b\u044c \u043e\u0442 OpenAI...\n\n     \u0418\u0441\u0442\u043e\u0447\u043d\u0438\u043a\u0438:\n     - ai/models/gpt4.md\n     - ai/multimodal/vision.md\n</code></pre></p>"},{"location":"user-guide/bot-commands/#basic-commands","title":"Basic Commands","text":""},{"location":"user-guide/bot-commands/#start","title":"/start","text":"<p>Initialize interaction with the bot.</p> <p>Usage: <pre><code>/start\n</code></pre></p> <p>Response: - Welcome message - Bot introduction - Quick start instructions - Information about working modes</p>"},{"location":"user-guide/bot-commands/#help","title":"/help","text":"<p>Display help information and available commands.</p> <p>Usage: <pre><code>/help\n</code></pre></p> <p>Response: - List of all commands - Brief descriptions - Links to documentation - Working modes information</p>"},{"location":"user-guide/bot-commands/#knowledge-base-commands","title":"Knowledge Base Commands","text":""},{"location":"user-guide/bot-commands/#setkb","title":"/setkb","text":"<p>Setup or change your knowledge base location.</p> <p>Usage: <pre><code>/setkb &lt;name|url&gt;\n</code></pre></p> <p>Examples:</p> <pre><code># Local knowledge base\n/setkb my-notes\n\n# GitHub repository\n/setkb https://github.com/username/kb-repo\n\n# Private repo (configure auth separately)\n/setkb https://github.com/username/private-kb\n</code></pre> <p>What it does: - Creates or connects to a knowledge base - Initializes Git if needed - Sets up directory structure</p>"},{"location":"user-guide/bot-commands/#kb","title":"/kb","text":"<p>Show current knowledge base information.</p> <p>Usage: <pre><code>/kb\n</code></pre></p> <p>Response: - KB path - Git status - Number of files - Last commit info</p>"},{"location":"user-guide/bot-commands/#status","title":"/status","text":"<p>Display processing statistics and current working mode.</p> <p>Usage: <pre><code>/status\n</code></pre></p> <p>Response: - Messages processed - Notes created - Success/failure rate - Agent type in use - Current working mode (Note Creation or Question Mode) - Knowledge base information - Git integration status</p> <p>Example: <pre><code>\ud83d\udcca \u0421\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0430 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438\n\n\u0412\u0441\u0435\u0433\u043e \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u043e \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439: 10\n\u041e\u0436\u0438\u0434\u0430\u0435\u0442 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438: 0\n\u041f\u043e\u0441\u043b\u0435\u0434\u043d\u044f\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430: 2024-01-01 12:00:00\n\n\u0411\u0430\u0437\u0430 \u0437\u043d\u0430\u043d\u0438\u0439: my-notes (local)\nGit \u0438\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044f: \u0412\u043a\u043b\u044e\u0447\u0435\u043d\u0430\n\n\ud83d\udcdd \u0422\u0435\u043a\u0443\u0449\u0438\u0439 \u0440\u0435\u0436\u0438\u043c: \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0431\u0430\u0437\u044b \u0437\u043d\u0430\u043d\u0438\u0439\n\u041f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0438\u0442\u044c: /note | /ask\n</code></pre></p>"},{"location":"user-guide/bot-commands/#settings-commands","title":"Settings Commands","text":""},{"location":"user-guide/bot-commands/#settings","title":"/settings","text":"<p>Open interactive settings menu.</p> <p>Usage: <pre><code>/settings\n</code></pre></p> <p>Features: - Browse settings by category - Interactive inline keyboard - Quick toggles for boolean values - Detailed setting information</p> <p>Categories: - \ud83d\udcda Knowledge Base - \ud83e\udd16 Agent Configuration - \u2699\ufe0f Processing - \ud83d\udcdd Logging</p> <p>Learn more \u2192</p>"},{"location":"user-guide/bot-commands/#viewsettings","title":"/viewsettings","text":"<p>View all settings or filtered by category.</p> <p>Usage: <pre><code>/viewsettings [category]\n</code></pre></p> <p>Examples:</p> <pre><code># View all settings\n/viewsettings\n\n# View specific category\n/viewsettings knowledge_base\n/viewsettings agent\n/viewsettings processing\n</code></pre> <p>Response: - Setting name - Current value - Default value - Description</p>"},{"location":"user-guide/bot-commands/#resetsetting","title":"/resetsetting","text":"<p>Reset a setting to its default value.</p> <p>Usage: <pre><code>/resetsetting &lt;name&gt;\n</code></pre></p> <p>Examples:</p> <pre><code>/resetsetting KB_GIT_AUTO_PUSH\n/resetsetting AGENT_TIMEOUT\n/resetsetting LOG_LEVEL\n</code></pre>"},{"location":"user-guide/bot-commands/#kbsettings","title":"/kbsettings","text":"<p>Quick access to Knowledge Base settings.</p> <p>Usage: <pre><code>/kbsettings\n</code></pre></p> <p>Shows: - KB_PATH - KB_GIT_ENABLED - KB_GIT_AUTO_PUSH - KB_GIT_REMOTE - KB_GIT_BRANCH</p>"},{"location":"user-guide/bot-commands/#agentsettings","title":"/agentsettings","text":"<p>Quick access to Agent settings.</p> <p>Usage: <pre><code>/agentsettings\n</code></pre></p> <p>Shows: - AGENT_TYPE - AGENT_MODEL - AGENT_TIMEOUT - AGENT_ENABLE_WEB_SEARCH - AGENT_ENABLE_GIT - AGENT_ENABLE_GITHUB</p>"},{"location":"user-guide/bot-commands/#message-processing","title":"Message Processing","text":""},{"location":"user-guide/bot-commands/#send-text-message","title":"Send Text Message","text":"<p>Simply send any text message to save it.</p> <p>Example: <pre><code>This is an interesting article about AI...\n</code></pre></p> <p>Processing: 1. Message received 2. Analyzed by agent 3. Categorized automatically 4. Saved as Markdown 5. Committed to Git</p>"},{"location":"user-guide/bot-commands/#forward-message","title":"Forward Message","text":"<p>Forward messages from any chat or channel.</p> <p>How: 1. Find message to save 2. Tap Forward 3. Select your tg-note bot</p> <p>Supports: - Channel posts - Group messages - Media with captions - Links and URLs</p>"},{"location":"user-guide/bot-commands/#send-multiple-messages","title":"Send Multiple Messages","text":"<p>Send consecutive messages - they'll be grouped automatically.</p> <p>Example: <pre><code>First message about a topic...\n(Send)\nSecond message with more details...\n(Send)\nThird message with conclusion...\n</code></pre></p> <p>Processing: - Bot waits 30 seconds (configurable) - Groups related messages - Creates single note</p>"},{"location":"user-guide/bot-commands/#send-links","title":"Send Links","text":"<p>Send article links for processing.</p> <p>Example: <pre><code>https://arxiv.org/abs/12345\n</code></pre></p> <p>With Qwen Code CLI: - Fetches article content - Analyzes and summarizes - Extracts key information - Saves structured note</p>"},{"location":"user-guide/bot-commands/#command-reference-table","title":"Command Reference Table","text":"Command Arguments Description Example <code>/start</code> - Initialize bot <code>/start</code> <code>/help</code> - Show help <code>/help</code> <code>/note</code> - Switch to note creation mode <code>/note</code> <code>/ask</code> - Switch to question mode <code>/ask</code> <code>/setkb</code> <code>&lt;name\\|url&gt;</code> Setup KB <code>/setkb my-notes</code> <code>/kb</code> - Show KB info <code>/kb</code> <code>/status</code> - Show statistics and mode <code>/status</code> <code>/settings</code> - Settings menu <code>/settings</code> <code>/viewsettings</code> <code>[category]</code> View settings <code>/viewsettings agent</code> <code>/resetsetting</code> <code>&lt;name&gt;</code> Reset setting <code>/resetsetting AGENT_TIMEOUT</code> <code>/kbsettings</code> - KB settings <code>/kbsettings</code> <code>/agentsettings</code> - Agent settings <code>/agentsettings</code>"},{"location":"user-guide/bot-commands/#tips-tricks","title":"Tips &amp; Tricks","text":""},{"location":"user-guide/bot-commands/#quick-configuration","title":"Quick Configuration","text":"<pre><code>/settings \u2192 Choose category \u2192 Select setting \u2192 Change value\n</code></pre>"},{"location":"user-guide/bot-commands/#view-settings","title":"View Settings","text":"<pre><code>/viewsettings\n/viewsettings agent\n/viewsettings knowledge_base\n</code></pre>"},{"location":"user-guide/bot-commands/#interactive-changes","title":"Interactive Changes","text":"<pre><code>/settings\n# Navigate through categories\n# Click on setting to change\n# For boolean: Use Enable/Disable buttons\n# For others: Send new value\n</code></pre>"},{"location":"user-guide/bot-commands/#reset-all-individual","title":"Reset All (Individual)","text":"<pre><code>/resetsetting KB_GIT_AUTO_PUSH\n/resetsetting AGENT_TIMEOUT\n/resetsetting MESSAGE_GROUP_TIMEOUT\n</code></pre>"},{"location":"user-guide/bot-commands/#see-also","title":"See Also","text":"<ul> <li>Settings Management Guide</li> <li>Working with Content</li> <li>Knowledge Base Setup</li> </ul>"},{"location":"user-guide/knowledge-base-setup/","title":"Knowledge Base Setup","text":"<p>Setup and manage your knowledge base.</p>"},{"location":"user-guide/knowledge-base-setup/#creating-a-knowledge-base","title":"Creating a Knowledge Base","text":""},{"location":"user-guide/knowledge-base-setup/#option-1-local-kb-via-bot","title":"Option 1: Local KB (via bot)","text":"<p>Recommended: create and initialize a local KB directly from Telegram using the command:</p> <pre><code>/setkb my-kb\n</code></pre> <p>This will create a new KB under the bot's KB root and initialize Git.</p> <p>Alternatively, you can prepare one manually:</p> <pre><code>mkdir my-kb\ncd my-kb\ngit init\ngit commit --allow-empty -m \"Initial commit\"\n</code></pre> <p>Configure in <code>config.yaml</code>:</p> <pre><code>KB_PATH: ./my-kb\nKB_GIT_ENABLED: true\nKB_GIT_AUTO_PUSH: false\n</code></pre>"},{"location":"user-guide/knowledge-base-setup/#option-2-github-kb","title":"Option 2: GitHub KB","text":"<ol> <li>Create repo on GitHub</li> <li>Clone locally</li> <li>Configure path or simply use the Telegram command:</li> </ol> <pre><code>/setkb https://github.com/yourusername/my-kb\n</code></pre> <p>Alternatively, configure the path manually:</p> <pre><code>KB_PATH: ./my-kb\nKB_GIT_ENABLED: true\nKB_GIT_AUTO_PUSH: true\nKB_GIT_REMOTE: origin\nKB_GIT_BRANCH: main\n</code></pre>"},{"location":"user-guide/knowledge-base-setup/#kb-structure","title":"KB Structure","text":"<pre><code>knowledge_base/\n\u251c\u2500\u2500 topics/           # Categorized notes\n\u2502   \u251c\u2500\u2500 ai/\n\u2502   \u251c\u2500\u2500 biology/\n\u2502   \u251c\u2500\u2500 physics/\n\u2502   \u2514\u2500\u2500 tech/\n\u251c\u2500\u2500 attachments/      # Media files\n\u2514\u2500\u2500 index.md          # KB index\n</code></pre>"},{"location":"user-guide/knowledge-base-setup/#git-integration","title":"Git Integration","text":"<p>Enable Git operations:</p> <pre><code>KB_GIT_ENABLED: true\nKB_GIT_AUTO_PUSH: true\n</code></pre> <p>Every note is automatically: - Added to Git - Committed with message - Pushed to remote (if enabled)</p>"},{"location":"user-guide/knowledge-base-setup/#see-also","title":"See Also","text":"<ul> <li>Bot Commands</li> <li>Working with Content</li> </ul>"},{"location":"user-guide/settings-management/","title":"Settings Management","text":"<p>Configure tg-note directly from Telegram.</p>"},{"location":"user-guide/settings-management/#overview","title":"Overview","text":"<p>The settings management system allows you to customize bot behavior without editing configuration files. All settings can be changed directly through Telegram commands.</p>"},{"location":"user-guide/settings-management/#features","title":"Features","text":"<ul> <li>\u2705 Interactive UI - Inline keyboards with category navigation</li> <li>\u2705 Type Safety - Automatic validation and conversion</li> <li>\u2705 Per-User - Each user has their own settings</li> <li>\u2705 Auto-Generated - New settings appear automatically</li> <li>\u2705 Secure - Credentials cannot be changed via Telegram</li> </ul>"},{"location":"user-guide/settings-management/#quick-start","title":"Quick Start","text":""},{"location":"user-guide/settings-management/#open-settings-menu","title":"Open Settings Menu","text":"<pre><code>/settings\n</code></pre>"},{"location":"user-guide/settings-management/#view-all-settings","title":"View All Settings","text":"<pre><code>/viewsettings\n</code></pre>"},{"location":"user-guide/settings-management/#change-a-setting","title":"Change a Setting","text":"<p>Use the interactive menu and inline buttons:</p> <pre><code>/settings \u2192 choose category \u2192 select setting \u2192 use buttons or send value\n</code></pre>"},{"location":"user-guide/settings-management/#reset-to-default","title":"Reset to Default","text":"<pre><code>/resetsetting AGENT_TIMEOUT\n</code></pre>"},{"location":"user-guide/settings-management/#settings-categories","title":"Settings Categories","text":""},{"location":"user-guide/settings-management/#knowledge-base","title":"\ud83d\udcda Knowledge Base","text":"<ul> <li><code>KB_PATH</code> - Path to knowledge base</li> <li><code>KB_GIT_ENABLED</code> - Enable Git operations  </li> <li><code>KB_GIT_AUTO_PUSH</code> - Auto-push changes</li> <li><code>KB_GIT_REMOTE</code> - Git remote name</li> <li><code>KB_GIT_BRANCH</code> - Git branch</li> </ul>"},{"location":"user-guide/settings-management/#agent","title":"\ud83e\udd16 Agent","text":"<ul> <li><code>AGENT_TYPE</code> - Agent implementation</li> <li><code>AGENT_MODEL</code> - AI model to use</li> <li><code>AGENT_QWEN_CLI_PATH</code> - Path to qwen CLI executable</li> <li><code>AGENT_INSTRUCTION</code> - Custom instruction for agent</li> <li><code>AGENT_TIMEOUT</code> - Operation timeout</li> <li><code>AGENT_ENABLE_WEB_SEARCH</code> - Enable web search</li> <li><code>AGENT_ENABLE_GIT</code> - Enable Git operations</li> <li><code>AGENT_ENABLE_GITHUB</code> - Enable GitHub API</li> <li><code>AGENT_ENABLE_SHELL</code> - Enable shell commands (\u26a0\ufe0f security risk)</li> <li><code>AGENT_ENABLE_FILE_MANAGEMENT</code> - Enable file operations</li> <li><code>AGENT_ENABLE_FOLDER_MANAGEMENT</code> - Enable folder operations</li> </ul>"},{"location":"user-guide/settings-management/#processing","title":"\u2699\ufe0f Processing","text":"<ul> <li><code>MESSAGE_GROUP_TIMEOUT</code> - Message grouping timeout</li> <li><code>PROCESSED_LOG_PATH</code> - Processing log path</li> </ul>"},{"location":"user-guide/settings-management/#logging","title":"\ud83d\udcdd Logging","text":"<ul> <li><code>LOG_LEVEL</code> - Logging level (DEBUG, INFO, WARNING, ERROR)</li> <li><code>LOG_FILE</code> - Log file path</li> </ul>"},{"location":"user-guide/settings-management/#interactive-menu","title":"Interactive Menu","text":"<p>The <code>/settings</code> command provides:</p> <ol> <li>Category Selection - Browse by category</li> <li>Quick Toggles - One-tap for booleans</li> <li>Setting Details - View descriptions</li> <li>Reset Options - Restore defaults</li> </ol>"},{"location":"user-guide/settings-management/#examples","title":"Examples","text":""},{"location":"user-guide/settings-management/#change-timeout","title":"Change Timeout","text":"<p>Open <code>/settings</code>, navigate to Agent category, select <code>AGENT_TIMEOUT</code>, and set it to <code>600</code>.</p>"},{"location":"user-guide/settings-management/#disable-auto-push","title":"Disable Auto-Push","text":"<p>Open <code>/settings</code>, navigate to Knowledge Base category, and toggle <code>KB_GIT_AUTO_PUSH</code> to off.</p>"},{"location":"user-guide/settings-management/#enable-debug-logging","title":"Enable Debug Logging","text":"<p>Open <code>/settings</code>, navigate to Logging, select <code>LOG_LEVEL</code>, and choose <code>DEBUG</code>.</p>"},{"location":"user-guide/settings-management/#see-also","title":"See Also","text":"<ul> <li>Bot Commands</li> <li>Configuration Guide</li> </ul>"},{"location":"user-guide/working-with-content/","title":"Working with Content","text":"<p>Learn how to work with different types of content in tg-note.</p>"},{"location":"user-guide/working-with-content/#supported-content-types","title":"Supported Content Types","text":"<ul> <li>\u2705 Text messages</li> <li>\u2705 Forwarded messages from channels</li> <li>\u2705 Photos with captions  </li> <li>\u2705 Documents</li> <li>\u2705 Links and URLs</li> <li>\u2705 Multiple consecutive messages</li> </ul>"},{"location":"user-guide/working-with-content/#sending-text-messages","title":"Sending Text Messages","text":"<p>Simply send any text to save it:</p> <pre><code>This is an interesting article about AI...\n</code></pre> <p>The bot will: 1. Receive your message 2. Analyze the content 3. Categorize it 4. Save as Markdown 5. Commit to Git</p>"},{"location":"user-guide/working-with-content/#forwarding-messages","title":"Forwarding Messages","text":"<p>Forward messages from any chat or channel:</p> <ol> <li>Find the message</li> <li>Tap Forward</li> <li>Select your tg-note bot</li> </ol> <p>Works with: - Channel posts - Group messages - Media with captions - Links</p>"},{"location":"user-guide/working-with-content/#sending-multiple-messages","title":"Sending Multiple Messages","text":"<p>Send consecutive messages for automatic grouping:</p> <pre><code>First message...\n(wait)\nSecond message...\n(wait)\nThird message...\n</code></pre> <p>Messages sent within 30 seconds (configurable) are grouped into one note.</p>"},{"location":"user-guide/working-with-content/#sending-links","title":"Sending Links","text":"<p>Send article URLs:</p> <pre><code>https://arxiv.org/abs/12345\n</code></pre> <p>With Qwen Code CLI, the bot will: - Fetch the article - Analyze content - Extract key info - Save structured note</p>"},{"location":"user-guide/working-with-content/#processing-workflow","title":"Processing Workflow","text":"<pre><code>graph LR\n    A[Content] --&gt; B[Analysis]\n    B --&gt; C[Categorization]\n    C --&gt; D[Markdown]\n    D --&gt; E[Git Commit]\n    E --&gt; F[Notification]\n</code></pre>"},{"location":"user-guide/working-with-content/#output-structure","title":"Output Structure","text":"<p>Your KB will have this structure:</p> <pre><code>knowledge_base/\n\u251c\u2500\u2500 topics/\n\u2502   \u251c\u2500\u2500 ai/\n\u2502   \u2502   \u2514\u2500\u2500 2025-10-03-neural-networks.md\n\u2502   \u251c\u2500\u2500 biology/\n\u2502   \u2502   \u2514\u2500\u2500 2025-10-03-crispr.md\n\u2502   \u2514\u2500\u2500 physics/\n\u2502       \u2514\u2500\u2500 2025-10-03-quantum.md\n\u2514\u2500\u2500 index.md\n</code></pre>"},{"location":"user-guide/working-with-content/#see-also","title":"See Also","text":"<ul> <li>Bot Commands</li> <li>Knowledge Base Setup</li> </ul>"}]}