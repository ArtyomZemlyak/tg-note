# Docker Compose for MLX backend (containerized)
#
# Notes:
# - MLX is supported on macOS (Apple Silicon). This container attempts to install
#   MLX at runtime and will fail fast with a clear message on unsupported hosts.
# - Use this override together with the base compose file.
#
# Usage:
#   docker compose -f docker-compose.yml -f docker-compose.mlx.yml up -d
# Or:
#   make up-mlx

version: '3.8'

services:
  # MLX server (containerized) â€“ CPU-only images available, but MLX
  # officially targets macOS; for Linux we'll keep host-run mode as default.
  # If you have a working container, set MEM_AGENT_BACKEND=mlx and use it.
  mlx-server:
    build:
      context: .
      dockerfile: Dockerfile.mlx
    image: tg-note-mlx:latest
    container_name: tg-note-mlx
    ports:
      - "${MLX_PORT:-8001}:8001"
    environment:
      - HF_HOME=/root/.cache/huggingface
    volumes:
      - ~/.cache/huggingface:/root/.cache/huggingface
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8001/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    networks:
      - tg-note-network

  # Disable vLLM when using MLX override
  vllm-server:
    profiles:
      - disabled

  # Update mcp-hub to connect to mlx-server
  mcp-hub:
    environment:
      - MEM_AGENT_HOST=mlx-server
      - MEM_AGENT_PORT=8001
      # Base URL is constructed internally
    depends_on:
      mlx-server:
        condition: service_healthy

  # Bot depends on mcp-hub
  bot:
    depends_on:
      mcp-hub:
        condition: service_healthy
