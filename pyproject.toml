[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "tg-note"
version = "0.1.0"
description = "Intelligent Telegram Bot for Knowledge Management"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "TG-Note Team", email = "team@tg-note.dev"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.11"
dependencies = [
    "python-telegram-bot>=20.7",
    "fastapi>=0.104.1",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "sqlalchemy>=2.0.23",
    "alembic>=1.13.0",
    "asyncpg>=0.29.0",
    "aiosqlite>=0.19.0",
    "PyGithub>=2.1.1",
    "gitpython>=3.1.40",
    "openai>=1.3.7",
    "anthropic>=0.7.7",
    "langchain>=0.0.350",
    "langchain-openai>=0.0.2",
    "tiktoken>=0.5.2",
    "redis>=5.0.1",
    "celery>=5.3.4",
    "python-dotenv>=1.0.0",
    "httpx>=0.25.2",
    "aiofiles>=23.2.1",
    "pillow>=10.1.0",
    "python-multipart>=0.0.6",
    "structlog>=23.2.0",
    "sentry-sdk[fastapi]>=1.38.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "pytest-cov>=4.1.0",
    "black>=23.11.0",
    "flake8>=6.1.0",
    "mypy>=1.7.1",
    "pre-commit>=3.6.0",
]
docs = [
    "mkdocs>=1.5.3",
    "mkdocs-material>=9.4.8",
]

[project.urls]
Homepage = "https://github.com/yourusername/tg-note"
Repository = "https://github.com/yourusername/tg-note"
Issues = "https://github.com/yourusername/tg-note/issues"

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "telegram.*",
    "github.*",
    "celery.*",
    "redis.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]